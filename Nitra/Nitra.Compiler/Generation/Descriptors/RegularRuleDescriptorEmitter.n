using Nitra.Typing;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Compiler
{
  [Record]
  internal sealed class RegularRuleDescriptorEmitter : RuleDescriptorEmitter[RegularRuleSymbol]
  {
    protected override BaseType  : PExpr  { get <[ Nitra.RegularRuleDescriptor ]> }
    protected override ClassName : string { get "RegularRuleDescriptor" }

    protected override BaseArgsNamesAndTypes : Seq[string * PExpr]
    {
      get
      {
        array[("parseDelegate", <[ Nitra.RegularRuleDescriptor.ParseDelegate ]>), ("regexText", <[ string ]>)]
      }
    }

    protected override BaseArgs(symbol : RegularRuleSymbol)  : Seq[PExpr]
    {
      array[<[ $(MethodEmitter.MakeRegularRuleCallFullName(symbol)) ]>, <[ $(symbol.Rule.ToString() : string) ]>]
    }
  }
}
