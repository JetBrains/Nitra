using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nitra.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nitra.Compiler
{
  public sealed class PExprLabel
  {
    private         _manager        : ManagerClass;
    private         _name           : string;
    private         _id             : int;
    private mutable _isLabelDefined : bool;

    public this(manager : ManagerClass, name : string)
    {
      _manager = manager;
      _name    = name;
      _id      = _manager.GetNewId(name);
    }

    public Goto()  : PExpr
    {
      PExpr.Typed(Location.Default, TExpr.Goto(_manager.InternalType.Void, _id, 1))
    }

    public Label() : PExpr
    {
      when (_isLabelDefined)
      {
        def message = $"Label '$_name' ($_id) multiply defined";
        assert2(false, message);
        Message.FatalError(message);
      }
      try PExpr.Typed(Location.Default, TExpr.Label(_manager.InternalType.Void, _id, TExpr.DefaultValue(_manager.InternalType.Void)))
      finally _isLabelDefined = true;
    }
  }
}
