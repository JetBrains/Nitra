using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra.Model;
using Nitra.Typing;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Compiler
{
  internal module RuleNameDecorators
  {
    public DecorateRuleClassName(this ruleSymbol : RuleSymbol) : string
    {
      match (ruleSymbol)
      {
        | _ is ExtensibleRuleSymbol => $"_#extensible#_..$(ruleSymbol.ModuleRelativeName; \"_\")_"
        | _ is ExtensionRuleSymbol  => $"_#extension#__..$(ruleSymbol.ModuleRelativeName; \"_\")_"
        | _ is SimpleRuleSymbol     => $"_#simple#_____..$(ruleSymbol.ModuleRelativeName; \"_\")_"
        | _ is RegularRuleSymbol    => $"_#regular#____..$(ruleSymbol.ModuleRelativeName; \"_\")_"
        | _                         => assert(false)
      }
    }

    public DecorateRuleName(this ruleSymbol : RuleSymbol) : string
    {
      $<#_#_..$(ruleSymbol.ModuleRelativeName; "_")_#>
    }
  }
}
