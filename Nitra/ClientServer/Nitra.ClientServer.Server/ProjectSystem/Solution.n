using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Nitra.Declarations;

using NSP = Nitra.ProjectSystem;

namespace Nitra.ClientServer.Server.ProjectSystem
{
  public class Solution : NSP.Solution, IDisposable
  {
           _projects  : Hashtable[int, Project] = Hashtable();
           _files     : Hashtable[int, File] = Hashtable();
    public Path       : string { get; }
    public Logger     : TextWriter;
    
    public this(path : string, logger : TextWriter)
    {
      Path   = path;
      Logger = logger;
      
      Log("Solution opening: " + path)
    }
    
    public IsOpened       : bool    { get; private set; }
    public Item[projectId : int] : Project { get { GetProject(projectId) } }
    
    public GetProject(id : int) : Project
    {
      _projects[id]
    }

    public GetFile(id : int) : File
    {
      _files[id]
    }
    
    internal _N_OnFileAdded(file : File) : void
    {
      _files.Add(file.Id, file);
    }

    internal _N_OnFileRemoved(id : int) : void
    {
      _files.Remove(id);
    }
    
    public Open(): void
    {
      IsOpened = true;
      Log("SolutionLoaded");
    }

    public Log(msg : string) : void { Logger?.WriteLine(msg) }
    
    public AddProject(project : Project): void
    {
      _projects.Add(project.Id, project);
    }
    
    public RemoveProject(id : int) : void
    {
      def project = _projects[id];
      _projects.Remove(id);
      project.Dispose();
    }
    
    public override Projects : Seq[NSP.Project] { get { _projects.Values } }
    
    public Dispose() : void { foreach (v in _projects.Values) v.Dispose(); }
  }
}