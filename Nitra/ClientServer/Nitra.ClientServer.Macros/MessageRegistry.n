using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.ClientServer.Macros
{
  module MessageRegistry
  {
    TypeToIdKey  = "nitra_messages_FixedType_to_id";
    IdToTypeKey = "nitra_messages_id_to_FixedType";
    
    public Register(manager: ManagerClass, type: FixedType): short
    {
      def typeToId = GetMap.[FixedType, short](manager, TypeToIdKey);
      def idToType = GetMap.[short, FixedType](manager, IdToTypeKey);
      
      mutable id;
      unless (typeToId.TryGetValue(type, out id))
      {
        id = typeToId.Count :> short + 42;
        idToType[id] = type;
        typeToId[type] = id;
      }
      id
    }
    
    public GetRegistry(manager: ManagerClass): array[short * FixedType] 
    {
      match (manager.UserData[IdToTypeKey])
      {
        | reg is Hashtable[short, FixedType] => reg.KeyValuePairs
        | _ => array(0)
      }
    }

    GetMap[K, V](manager: ManagerClass, key : string) : Hashtable[K, V]
    {
      def userData = manager.UserData;
      if (userData.Contains(key))
        userData[key] :> Hashtable[_, _]
      else
      {
        def reg = Hashtable();
        userData[key] = reg;
        reg
      }
    }
  }
}