using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Text;
using System.Collections.Generic;

namespace Nitra.Runtime
{
  public interface ISourceSnapshotProvider
  {
    GetSource() : SourceSnapshot;
  }

  public class ChemicalAstContext : ISourceSnapshotProvider
  {
    private         buffer   : StringBuilder             = StringBuilder("!!!synthetic source!!!\r\n");
    private mutable keywords : Dictionary[string, NSpan];
    private mutable source   : SourceSnapshot;

    public GetSpan(text : string) : NSpan
    {
      source = null;
      def startPos = buffer.Length;
      _ = buffer.Append(text);
      def endPos = buffer.Length;
      NSpan(startPos, endPos)
    }

    public GetKeywordSpan(keyword : string) : NSpan
    {
      when (keywords : object == null)
        keywords = Dictionary();

      mutable span;
      unless (keywords.TryGetValue(keyword, out span))
      {
        span = GetSpan(keyword);
        keywords.Add(keyword, span);
      }
      span
    }

    public GetSource() : SourceSnapshot
    {
      when (source : object == null)
        source = SourceSnapshot(buffer.ToString());
      source
    }
  }
}
