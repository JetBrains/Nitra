using Nitra.Runtime;

using Nemerle;
using Nemerle.Compiler;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.ProjectSystem
{
  class RootCompilerMessage : CompilerMessages, IRootCompilerMessages
  {
    public Dispose() : void {  }

    public override Error       (loc : Location, msg : string, _num = -1) : void
    {
      Message.Error(loc.NLocation(), msg);
    }
    public override Warning     (loc : Location, msg : string, num = -1) : void
    {
      if (num > 0)
        Message.Warning(num, loc.NLocation(), msg);
      else
        Message.Warning(loc.NLocation(), msg);
    }
    public override Hint        (loc : Location, msg : string, _num = -1) : void
    {
      Message.Hint(loc.NLocation(), msg);
    }
    public override RootError   (loc : Location, msg : string, num = -1) : IRootCompilerMessages
    {
      Error(loc, msg, num);
      this
    }
    public override RootWarning (loc : Location, msg : string, num = -1) : IRootCompilerMessages
    {
      Warning(loc, msg, num);
      this
    }
    public override RootHint    (loc : Location, msg : string, num = -1) : IRootCompilerMessages
    {
      Hint(loc, msg, num);
      this
    }
  }
}
