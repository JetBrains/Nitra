using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;

namespace Nitra.Declarations
{
  public abstract class DeclarationBase : AstBase
  {
    protected this() { }

    protected mutable __NameImpl : Name;

    internal UpdateName(newName : Name) : void
    {
      __NameImpl = newName;

      when (IsAmbiguous)
        foreach (ambiguity in (this :> IAmbiguousAst).Ambiguities)
          (ambiguity :> DeclarationBase).UpdateName(newName);
    }

    public virtual CreateSymbol() : DeclarationSymbol
    {
      throw NotImplementedException();
    }

    public virtual IsParsed : bool { get { true } }
  }
}
