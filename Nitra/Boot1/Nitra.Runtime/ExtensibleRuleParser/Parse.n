using Nitra.Internal.Recovery;
using Nemerle.Imperative;
using System;

namespace Nitra.Internal
{
  public sealed partial class ExtensibleRuleParser
  {
    public override Parse(mutable curTextPos : int, text : string, parseResult : ParseResult) : int
    {
      when (parseResult.TerminateParsing)
        throw OperationCanceledException();

      curTextPos = ParsePrefix(curTextPos, text, parseResult);
      if (curTextPos >= 0)
      {
        mutable bestPos;
        do
        {
          bestPos = curTextPos;
          curTextPos = ParsePostfix(curTextPos, text, parseResult);
        }
        while (curTextPos > bestPos);
        bestPos;
      }
      else
        -1;
    }
  }
}
