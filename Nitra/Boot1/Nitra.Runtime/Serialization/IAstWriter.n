using Nitra.Runtime;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Serialization
{
  public interface IAstWriter
  {
    BeginWriteOption(hasValue : bool, isOptimized : bool) : void;
    BeginWriteList(count : int, isOptimized : bool) : void;
    BeginWriteTuple(count : int) : void;
    WriteText(text : string) : void;
    BeginWriteSimpleAst(ruleDescriptor : SimpleRuleDescriptor, argumentCount : int) : void;
    BeginWriteExtensionAst(ruleDescriptor : ExtensionRuleDescriptor, argumentCount : int) : void;
    WriteMissingAst(ruleDescriptor : RuleDescriptor) : void;
    BeginWriteAmbiguousAst(ruleDescriptor : ExtensibleRuleDescriptor, ambiguityCount : int) : void;
    EndWrite() : void;
  }
}
