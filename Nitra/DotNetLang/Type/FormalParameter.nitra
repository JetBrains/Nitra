using Nemerle.Collections;

using Nitra;
using Nitra.Declarations;
using Nitra.Internal;

namespace DotNet
{
  declaration FormalParameter : CustomAttributeHost
  {
    symbol
    {
      // TODO: add support of optional, custom modifiers, index and default value
      Kind      = "parameter";
      SpanClass = DotNetLang.ParameterSpanClass;

      in Type     : TypeSymbol;
      in Modifier : ParameterModifier;
      in Index    : uint;
    }

    inout Index    : uint;
    in TypeRef : Ref[TypeSymbol];

    IndexOut = IndexIn + 1u;
    Type.Scope           = Scope;
    TypeRef              = Type.Ref.Resolve();
    Symbol.Type          = TypeRef.Symbol;
    Symbol.Modifier      = Modifier.ValueOrDefault;
    Symbol.Index         = IndexIn;

    Type       : QualifiedReference;
    Modifier   : ParameterModifier;
  }
}
