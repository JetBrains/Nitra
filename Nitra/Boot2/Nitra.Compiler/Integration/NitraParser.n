using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Collections.Generic;
using System.Linq;

[assembly: Nemerle.Internal.RegisterParser("Nitra.Compiler.Integration.NitraParser", ".nitra")]

namespace Nitra.Compiler.Integration
{
  /// <summary>
  /// Description of NitraParser.
  /// </summary>
  [Record]
  public sealed class NitraParser : IParser
  {
    manager : ManagerClass;

    public Parse(source : ISource) : Nemerle.Compiler.ParseResult
    {
      def fileName = Location.GetFileName(source.FileIndex);
      def fakeLoc = Location(source.FileIndex, 1, 1);
      def nitrasource = Util.locate(fakeLoc, <[ Nitra.NitraSource($(fileName : string)) ]>);
      manager.Hierarchy.AddAssemblyAttribute(manager.CoreEnv, nitrasource);
      Nemerle.Compiler.ParseResult([])
    }
  }
}
