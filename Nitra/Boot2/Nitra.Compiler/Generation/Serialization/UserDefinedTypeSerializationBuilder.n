using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;

namespace Nitra.Serialization
{
  [Record]
  public sealed class UserDefinedTypeSerializationBuilder : TypeSerializationBuilder
  {
    public override Tag : TypeTag { get { TypeTag.Object } }

    private _writeFunc : PExpr;
    private _readFunc  : PExpr;

    public sealed override Write(obj : PExpr) : PExpr
    {
      def args = obj :: Compiler.MakeWriteArguments();
      <[ $_writeFunc(..$args) ]>
    }

    public sealed override Read(memberName : PExpr, typeTag : PExpr) : PExpr
    {
      def args = memberName :: typeTag :: Compiler.MakeReadArguments();
      <[ $_readFunc(..$args) ]>
    }
  }
}
