using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Declarations
{
  public struct TypeStructure
  {
    public this(typeInfo : TypeSymbol)
    {
      TypeInfo = typeInfo;
    }

    public this(typeInfo : TypeSymbol, typeArgument : TypeSymbol)
    {
      this(typeInfo);
      mutable args = LightList();
      args.Add(typeArgument);
      TypeArguments = args;
    }

    public this(typeInfo : TypeSymbol, typeArguments : Seq[TypeSymbol])
    {
      this(typeInfo);
      mutable args = LightList();
      args.AddRange(typeArguments);
      TypeArguments = args;
    }

    public this(typeInfo : TypeSymbol, typeArguments : LightList[TypeSymbol])
    {
      this(typeInfo);
      TypeArguments = typeArguments;
    }

    public TypeInfo      : TypeSymbol            { get; }
    public TypeArguments : LightList[TypeSymbol] { get; }
  }
}
