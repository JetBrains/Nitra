using Nemerle.Collections;

namespace Nitra.Declarations
{
  public delegate ResolutionAlgorithm[-TSymbol, TConcreteSymbol](candidate : TSymbol) : ValueOption[TConcreteSymbol]
    where TSymbol         : DeclarationSymbol
    where TConcreteSymbol : DeclarationSymbol;

  public delegate ResolveManyAlgorithm[TSymbol, TConcreteSymbol](candidates : LightList[TSymbol]) : LightList[TConcreteSymbol]
    where TSymbol         : DeclarationSymbol
    where TConcreteSymbol : DeclarationSymbol;

  public module ResolutionAlgorithms[TSymbol, TConcreteSymbol]
    where TSymbol         : DeclarationSymbol
    where TConcreteSymbol : DeclarationSymbol
  {
    public static TryCast : ResolutionAlgorithm[TSymbol, TConcreteSymbol] = TryCastImpl;

    private static TryCastImpl(candidate : TSymbol) : ValueOption[TConcreteSymbol]
    {
      | symbol is TConcreteSymbol => VSome(symbol)
      | _ => VNone()
    }
  }
}
