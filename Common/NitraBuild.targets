<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildCommunityTasksPath Condition=" '$(MSBuildCommunityTasksPath)' == '' ">$(MSBuildThisFileDirectory)\..\ExternalTools\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
    <TargetsTriggeredByCompilation>SetCoreCompileExecuted;$(TargetsTriggeredByCompilation);</TargetsTriggeredByCompilation>
  </PropertyGroup>
  
  <!-- <Import Project="$(MSBuildThisFileDirectory)\ResharperDeploy.targets" /> -->

  <Target Name="SetCoreCompileExecuted">
    <PropertyGroup>
	  <CoreCompileExecuted>true</CoreCompileExecuted>
    </PropertyGroup>
  </Target>

  <UsingTask AssemblyFile="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.TemplateFile" />

  <UsingTask TaskName="Nemerle.Tools.MSBuildTask.GetGitTagRevision" AssemblyFile="$(Nemerle)\Nemerle.MSBuild.Tasks.dll"/>

  <Target Name="GetNitraBuildVersion">
    <GetGitTagRevision WorkingDirectory="$(MSBuildProjectDirectory)">
      <Output TaskParameter="GitTagAsVersion" PropertyName="GitTagAsVersion" />
      <Output TaskParameter="GitRevision"     PropertyName="GitRevision" />
    </GetGitTagRevision>
    <PropertyGroup>
      <GitTagAsVersion Condition=" '$(GitTagAsVersion)' == '' ">0.1</GitTagAsVersion>
      <GitRevision Condition=" '$(GitRevision)' == '' ">0</GitRevision>
      <GitCommitHash Condition=" '$(GitCommitHash)' == '' ">0</GitCommitHash>
      <NitraBuildVersion>$(GitTagAsVersion).$(GitRevision).0</NitraBuildVersion>
      <NitraCommitHash>$(GitCommitHash)</NitraCommitHash>
    </PropertyGroup>
    <Message Text="Nitra build version:     $(NitraBuildVersion) " Importance="High" />
  </Target>

  <Target Name="GetNemerleBuildVersion">
    <GetAssemblyIdentity AssemblyFiles="$(Nemerle)\Nemerle.dll">
      <Output TaskParameter="Assemblies" ItemName="NemerleRuntimeIdentity" />
    </GetAssemblyIdentity>
    <PropertyGroup>
      <NemerleBuildVersion>%(NemerleRuntimeIdentity.Version)</NemerleBuildVersion>
      <NemerleProductVersion>$([System.Text.RegularExpressions.Regex]::Replace('%(NemerleRuntimeIdentity.Version)', '(?&lt;major&gt;\d+)\.(?&lt;minor&gt;\d+)\.0\.(?&lt;build&gt;\d+)', '${major}.${minor}.${build}.0'))</NemerleProductVersion>
    </PropertyGroup>
    <Message Text="Nemerle build version:   $(NemerleBuildVersion) " Importance="High" />
    <Message Text="Nemerle product version: $(NemerleProductVersion) " Importance="High" />
  </Target>

  <Target Name="BuildPolicy01Assembly">
    <GetAssemblyIdentity AssemblyFiles="$(OutputPath)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="OutputAssemblyIdentity" />
    </GetAssemblyIdentity>
    <ItemGroup>
      <Token Include="newVersion">
        <ReplacementValue>%(OutputAssemblyIdentity.Version)</ReplacementValue>
      </Token>
      <Token Include="oldVersion">
        <ReplacementValue>0.1.0.0</ReplacementValue>
      </Token>
      <Token Include="name">
        <ReplacementValue>$(AssemblyName)</ReplacementValue>
      </Token>
      <Token Include="publicKeyToken">
        <ReplacementValue>%(OutputAssemblyIdentity.PublicKeyToken)</ReplacementValue>
      </Token>
      <Token Include="culture">
        <ReplacementValue>%(OutputAssemblyIdentity.Culture)</ReplacementValue>
      </Token>
    </ItemGroup>
    <TemplateFile Template="$(MSBuildThisFileDirectory)\AssemblyBindingPolicy.template" OutputFilename="$(MSBuildProjectDirectory)\$(OutputPath)\policy.0.1.$(AssemblyName).config" Tokens="@(Token)" />
    <AL LinkResources="$(OutputPath)\policy.0.1.$(AssemblyName).config" OutputAssembly="$(OutputPath)\policy.0.1.$(AssemblyName).dll" KeyFile="$(KeyOriginatorFile)" Platform="$(Platform)" />
  </Target>

  <Target Name="NugetPack" Condition=" '$(CoreCompileExecuted)' == 'true' " DependsOnTargets="GetNitraBuildVersion; GetNemerleBuildVersion">
    <PropertyGroup>
      <Nuget>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\ExternalTools\Nuget.exe'))</Nuget>
      <NugetOutput>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\bin\$(Configuration)\NuGetSource'))</NugetOutput>
      <NugetProperties>OutputPath=$(OutputPath);NitraBuildVersion=$(NitraBuildVersion);NemerleProductVersion=$(NemerleProductVersion)</NugetProperties>
    </PropertyGroup>
    <Error Condition=" '$(NuspecFile)' == '' " Text="Set property 'NuspecFile' in project '$(MSBuildProjectFile)'." />
    <MakeDir Condition="!Exists($(NugetOutput))" Directories="$(NugetOutput)" />
    <Exec Command="&quot;$(Nuget)&quot; pack &quot;$(NuspecFile)&quot; -OutputDirectory &quot;$(NugetOutput)&quot; -Properties &quot;$(NugetProperties)&quot;" WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

</Project>