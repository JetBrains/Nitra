// REFERENCE: Sample.Calc.dll

using Nitra.Runtime;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;
using System.Linq;

using Nitra;
using Nitra.Quote;

[assembly: ImportRules(Assembly = "Sample.Calc", Grammar = "SplicableCalcGrammar")]

module Program
{
  Main () : void
  {
    def x    = quote <# expr: $Number(number.Create(context, "3")) #>;
    def expr = quote <# expr: 7 + $(x) #>;
    def ast  = quote <# start: 2 + $(expr) * 4, 8 + 1 #>;

    WriteLine($<#Result: ..$(ast.Value(); ", ")#>);
    WriteLine($"Pretty print: $ast");

    quote match (ast)
    {
      | <# start: $ExprsItem(_), 8 + 1 #> => WriteLine("ok");
      | _ => WriteLine("fail")
    }
  }
}
/*
BEGIN-OUTPUT
Result: 42, 9
Pretty print: 2 + (7 + 3) * 4,8 + 1
ok
END-OUTPUT
*/
