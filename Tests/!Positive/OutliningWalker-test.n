// REFERENCE: OutliningWalker-syntax
using Nitra;
using Nitra.Internal;
using System.Collections.Generic;
using System.Console;

module Program
{
  Main() : void
  {
    def source = SourceSnapshot("{ x, y, z, [ a, b, c, { } ], ( k, n, m ), ( ) }");
    def parserHost = ParserHost();
    def result = Blocks.Start(source, parserHost);
    if (result.IsSuccess)
    {
      def outlines = List();
      result.GetOutlining(outlines);
      outlines.Sort((a, b) => a.Span.StartPos.CompareTo(b.Span.StartPos));
      foreach (outline in outlines)
      {
        Write('"');
        Write(source.Text.Substring(outline.Span.StartPos, outline.Span.Length));
        Write('"');
        WriteLine();
      }
    }
    else
      WriteLine("Parse failed");
  }
}
/*
BEGIN-OUTPUT
" x, y, z, [ a, b, c, { } ], ( k, n, m ), ( ) "
"a, b, c, { }"
" "
"k, n, m "
END-OUTPUT
*/
