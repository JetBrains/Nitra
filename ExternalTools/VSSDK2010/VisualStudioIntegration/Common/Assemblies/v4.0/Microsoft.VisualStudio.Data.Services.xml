<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Data.Services</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataConnectionDialogFilterCallback">
      <summary>Represents the method that is called when data sources and providers are being filtered in the data connection dialog box.</summary>
      <returns>true if the data provider is available for the data source; false if the data provider is not available and should be filtered out for the data source.</returns>
      <param name="source">The GUID of the data source.</param>
      <param name="provider">The GUID of the data provider.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataConnectionMessageReceivedEventArgs">
      <summary>Encapsulates the event data for the <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataConnectionEvents.MessageReceived" /> event for a data connection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataConnectionMessageReceivedEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionMessageReceivedEventArgs" /> class with a message text.</summary>
      <param name="message">The text of the message.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataConnectionMessageReceivedEventArgs.Message">
      <summary>Gets the text message.</summary>
      <returns>A <see cref="T:System.String" /> value representing the text message.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException">
      <summary>Represents the exception thrown when a data connection open call is canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException" /> class with the specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionOpenCanceledException" /> class with the specified error message and the inner exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or null if no inner exception is specified.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataConnectionState">
      <summary>Specifies the current state of the data connection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataConnectionState.Closed">
      <summary>The data connection is closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataConnectionState.Open">
      <summary>The data connection is open.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataConnectionState.Broken">
      <summary>The data connection was previously open, but has been broken for unknown reasons.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataConnectionStateChangedEventArgs">
      <summary>Encapsulates event data for the <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataConnectionEvents.StateChanged" /> event for a data connection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataConnectionStateChangedEventArgs.#ctor(Microsoft.VisualStudio.Data.Services.DataConnectionState,Microsoft.VisualStudio.Data.Services.DataConnectionState)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionStateChangedEventArgs" /> class with the old and new connection states.</summary>
      <param name="oldState">A value from <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionState" /> representing the state the data connection was in before the last state change.</param>
      <param name="newState">A value from <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionState" /> representing the new state of the data connection.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataConnectionStateChangedEventArgs.NewState">
      <summary>Gets the new state of the data connection.</summary>
      <returns>A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionState" /> enumeration indicating the new state of the data connection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataConnectionStateChangedEventArgs.OldState">
      <summary>Gets the state the data connection was in before the last state change.</summary>
      <returns>A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionState" /> enumeration indicating the state the data connection was in before the last state change.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataExplorerNodeEventArgs">
      <summary>Encapsulates the event data for the following events: <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeInserted" />, <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeChanged" />, <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeRemoving" />, and <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeExpandedOrRefreshed" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataExplorerNodeEventArgs.#ctor(Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataExplorerNodeEventArgs" /> class with a data explorer node.</summary>
      <param name="node">An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing a node in the data explorer.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataExplorerNodeEventArgs.Node">
      <summary>Gets an object representing a node in the data explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing a node in the data explorer.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute">
      <summary>Specifies that an interface or class represents a mapped object type. A mapped object type is an API that exposes a strongly-typed view of a particular underlying data source–specific object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute" /> class, specifying the type name.</summary>
      <param name="typeName">The name of the generic type that is mapped.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.AvailableRestrictions">
      <summary>Gets or sets all the restrictions that are available for the current type.</summary>
      <returns>A string value containing all the restrictions that are available for the current type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.AvailableRestrictionsList">
      <summary>Gets a list of all the restrictions that are available for the current type.</summary>
      <returns>A list of strings containing all the restrictions that are available for the current type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.ClassId">
      <summary>Gets or sets the class ID of the attribute.</summary>
      <returns>The class ID of this attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.Identifier">
      <summary>Gets or sets the identifier name that uniquely identifies the current type.</summary>
      <returns>The identifier name that uniquely identifies the current type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.IdentifierList">
      <summary>Gets a list of identifiers that uniquely identify the current type.</summary>
      <returns>A list of identifier strings that uniquely identify the current type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.RequiredOrdering">
      <summary>Gets or sets the required ordering for the current mapped type.</summary>
      <returns>The required ordering for the current mapped type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataMappedObjectTypeAttribute.TypeName">
      <summary>Gets the name of the mapped type.</summary>
      <returns>The name of the mapped type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataObjectAddedEventArgs">
      <summary>Encapsulates event data for the <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.ObjectAdded" /> event.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectAddedEventArgs.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectAddedEventArgs" /> class with the object type name and an array of identifier parts representing this data object.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs">
      <summary>Encapsulates event data for the <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.ObjectChanged" /> event.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs" /> class with the object type name and an array of identifier parts representing the data object.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.#ctor(System.String,System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs" /> class with the object type name, an array of identifier parts representing the data object, a collection of name/value pairs of property names and values, and another collection of name/value pairs for new property names and values.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
      <param name="propertyValues">A collection of name/value pairs of property names and values. </param>
      <param name="newPropertyValues">A collection of name/value pairs for new property names and values</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.#ctor(System.String,System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object},System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs" /> class with the object type name, an array of identifier parts representing the data object, a collection of name/value pairs of property names and values, an array of new identifier parts representing the data object, and another collection of name/value pairs for new property names and values.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
      <param name="propertyValues">A collection of name/value pairs of property names and values.</param>
      <param name="newIdentifier">An array of identifier parts that identify the new data object.</param>
      <param name="newPropertyValues">A collection of name/value pairs for new property names and values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.#ctor(System.String,System.Object[],System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs" /> class with the object type name, an array of identifier parts, and another array of new identifier parts representing this data object.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
      <param name="newIdentifier">An array of new identifier parts that identify the data object.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.NewIdentifier">
      <summary>Gets a list of all new identifier parts that represent the data object.</summary>
      <returns>A list of objects representing all new identifier parts that represent the data object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.NewPropertyValues">
      <summary>Gets a collection of name/value pairs containing the new property names and values.</summary>
      <returns>A collection of name/value pairs containing the new property names and values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs.PropertyValues">
      <summary>Gets a collection of name/value pairs containing the existing property names and values.</summary>
      <returns>A collection of name/value pairs containing the existing property names and values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataObjectDeletedEventArgs">
      <summary>Encapsulates event data for the <see cref="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.ObjectDeleted" /> event.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectDeletedEventArgs.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectDeletedEventArgs" /> class with the object type name and a list of identifier parts representing the data object.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataObjectEventArgs">
      <summary>Represents the base class for the following other classes that contain data object event data: <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectAddedEventArgs" />, <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectChangedEventArgs" />, and <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectDeletedEventArgs" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataObjectEventArgs.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectEventArgs" /> class, specifying the object type name and a list of identifier parts representing the data object.</summary>
      <param name="typeName">The name of the data object's type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataObjectEventArgs.Identifier">
      <summary>Gets a list of identifier parts for the data object.</summary>
      <returns>A list of identifier objects for the data object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.DataObjectEventArgs.TypeName">
      <summary>Gets the name of the data object type.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of the data object type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat">
      <summary>Specifies the type of formatting required for the data object identifier string value. The formatting of the identifier depends on its intended use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat.None">
      <summary>Specifies that no formatting is required.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat.Default">
      <summary>Specifies the default format.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat.WithQuotes">
      <summary>Specifies that quotation marks are required.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat.ForDisplay">
      <summary>Specifies the formatting suitable for the identifier's display as a label on a control.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.DataProtection">
      <summary>Represents the ability to encrypt and decrypt strings by using the Windows Data Protection API (DPAPI).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataProtection.DecryptString(System.String)">
      <summary>Decrypts a specified string.</summary>
      <returns>The decrypted string.</returns>
      <param name="s">A string previously encrypted with a call to <see cref="M:Microsoft.VisualStudio.Data.DataProtection.EncryptString(System.String)" />.</param>
      <exception cref="T:System.FormatException">The <paramref name="s" /> parameter is not in a valid format.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The decryption failed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.DataProtection.EncryptString(System.String)">
      <summary>Encrypts a specified string.</summary>
      <returns>Returns the encrypted string.</returns>
      <param name="s">A string to encrypt.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The encryption failed.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection">
      <summary>Represents the interface for a data connection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Clone">
      <summary>Creates a copy of the current data connection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing an identical copy of the current instance of the data connection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Clone(System.Boolean)">
      <summary>Creates a copy of the current data connection.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing an identical copy of the current instance of the data connection.</returns>
      <param name="suppressLocking">A Boolean value indicating whether the cloned data connection is a non-locking connection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Close">
      <summary>Closes the current data connection.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.ConnectionTimeout">
      <summary>Gets or sets the amount of time to wait to establish a connection before terminating the attempt and generating a time-out error.</summary>
      <returns>An integer representation of the allowable time-out period.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.CurrentThreadHasLock">
      <summary>Gets a value indicating whether the current thread has a lock on the data connection object.</summary>
      <returns>true if the current thread has a lock on the data connection object; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.DisplayConnectionString">
      <summary>Gets the connection string in which sensitive information, if present, is formatted for secure display.</summary>
      <returns>A <see cref="T:System.String" /> value representing the connection string in a format suitable for display purposes.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.EncryptedConnectionString">
      <summary>Gets an encrypted version of the connection string.</summary>
      <returns>A <see cref="T:System.String" /> value representing the connection string in encrypted form.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.EnsureConnected">
      <summary>Determines whether the current data connection is connected, and, if not, opens it.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.EquivalentTo(System.Guid,System.String,System.Boolean)">
      <summary>Indicates whether the given data connection information, as represented by the provider GUID and a connection string, is equivalent to the current instance of the data connection.</summary>
      <returns>true if the given data connection information is equivalent to the current instance; otherwise, false.</returns>
      <param name="provider">The GUID of the data provider.</param>
      <param name="connectionString">The connection string containing connection properties and values.</param>
      <param name="encryptedString">A Boolean value indicating whether the connection string is encrypted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.GetLockedProviderObject">
      <summary>Retrieves the underlying locked data provider that supports the current data connection.</summary>
      <returns>The underlying locked data provider object for the current data connection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.GetLockedProviderObject(System.Int32)">
      <summary>Retrieves the underlying data provider after locking the current data connection.</summary>
      <returns>The underlying data provider object for the current data connection, or null if the data connection could not be locked within the specified time-out period.</returns>
      <param name="lockTimeout">The amount of time, in seconds, to wait for the data connection to lock before returning.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.IsLocked">
      <summary>Gets a value indicating whether the current data connection is locked.</summary>
      <returns>true if locked, otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.IsNonLocking">
      <summary>Gets a value indicating whether the data connection supports automatic locking.</summary>
      <returns>true if the data connection supports automatic locking; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Lock">
      <summary>Locks the current data connection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Lock(System.Int32)">
      <summary>Locks the current data connection.</summary>
      <returns>A <see cref="T:System.Boolean" /> value indicating whether the lock was successful within the specified time-out period.</returns>
      <param name="lockTimeout">The amount of time, in seconds, to wait for the data connection to lock before returning.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Open">
      <summary>Opens the current data connection.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Provider">
      <summary>Gets the GUID of the data provider.</summary>
      <returns>A <see cref="T:System.Guid" /> object representing the GUID of the data provider.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.ReleaseExclusiveAccessProxy">
      <summary>Releases an existing exclusive access proxy.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.SafeConnectionString">
      <summary>Gets the connection string, excluding sensitive information.</summary>
      <returns>A <see cref="T:System.String" /> value representing the connection string that excludes sensitive information.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Source">
      <summary>Gets the GUID of the data source for the current data connection, if any.</summary>
      <returns>A <see cref="T:System.Guid" /> object representing the data source for the current data connection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnection.State">
      <summary>Gets the current state of the data connection.</summary>
      <returns>A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionState" /> enumeration specifying the current state of the data connection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.Unlock">
      <summary>Unlocks the current data connection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnection.UnlockProviderObject">
      <summary>Unlocks the underlying provider object for the current data connection.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog">
      <summary>Provides access to the Add Connection dialog box, with which you can obtain data connection information from users.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.AcceptButtonText">
      <summary>Gets or sets the text displayed on the button the user clicks to accept the contents of the Add Connection dialog box, and then returns from the <see cref="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ShowDialog" /> method.</summary>
      <returns>The string value displayed on the button the user clicks to accept the contents of the dialog box.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.AddAllSources">
      <summary>Adds all registered data sources for display in the Choose/Change Data Source dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.AddSources(Microsoft.VisualStudio.Data.Services.DataConnectionDialogFilterCallback)">
      <summary>Enumerates all registered data sources and their associated data providers, and conditionally adds source/provider combinations to the Choose/Change Data Source dialog box, depending on logic in the supplied callback.</summary>
      <param name="callback">A delegate called for each data source/provider combination to determine whether the combination should be added.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.AddSources(System.Guid)">
      <summary>Enumerates through all registered data sources and associated data providers, and adds those that have a matching provider technology.</summary>
      <param name="providerTechnology">A GUID specifying a data provider technology.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.AvailableProviders">
      <summary>Gets a collection of unique identifiers for DDEX providers that are currently available for selection in the Choose/Change Data Source dialog box.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains a collection of unique identifiers for the current set of available DDEX providers.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.AvailableSources">
      <summary>A collection of GUIDs representing DDEX data sources that should be available for display in the Choose/Change Data Source dialog box.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object containing available GUIDs.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ChangeSourceHeaderLabel">
      <summary>Gets or sets a summary description appearing on the Change Data Source dialog box header when the user clicks the Change button.</summary>
      <returns>A string literal value represented on the dialog box header.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ChangeSourceTitle">
      <summary>Gets or sets the title of the Change Data Source dialog box, which can be shown when the user clicks the Change button.</summary>
      <returns>The string literal value for the dialog box title.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ChooseSourceAcceptText">
      <summary>Gets or sets text that appears on the Continue button of the Choose Data Source dialog box when it appears before the Add Connection dialog box.</summary>
      <returns>The string literal value of the Continue button text.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ChooseSourceHeaderLabel">
      <summary>Gets or sets the text of the description that appears on the header of the Choose Data Source dialog box when it appears before the Add Connection dialog box.</summary>
      <returns>The string literal value of the header text.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ChooseSourceTitle">
      <summary>Gets or sets the title of the Choose Data Source dialog box when it appears before the Add Connection dialog box.</summary>
      <returns>The string literal text value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.CreateNewConnection">
      <summary>Gets or sets a Boolean value indicating whether a new connection should be created.</summary>
      <returns>A <see cref="T:System.Boolean" /> value indicating whether a new connection should be created.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.DisplayConnectionString">
      <summary>Gets or sets unencrypted connection information for display in the Add Connection dialog box for the specified data provider.</summary>
      <returns>Returns string representing unencrypted connection information for the connection dialog box.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.EncryptedConnectionString">
      <summary>Gets or sets encrypted connection information for the dialog box for the specified data provider.</summary>
      <returns>Returns encrypted connection information represented by the dialog box for the selected provider.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.HeaderLabel">
      <summary>Gets or sets a summary description that appears in the header of the Add Connection dialog box.</summary>
      <returns>The string literal value of the dialog box header label, or null if no value is set.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.LoadExistingConfiguration(System.Guid,System.String,System.Boolean)">
      <summary>Configures the Add Connection dialog box with the specified existing DDEX provider and connection string, deriving the correct data source when possible.</summary>
      <param name="provider">A <see cref="T:System.Guid" /> object specifying a DDEX provider.</param>
      <param name="connectionString">A connection string recognized by the data provider.</param>
      <param name="encryptedString">A Boolean value indicating whether the connection string parameter is encrypted.</param>
      <exception cref="T:System.ArgumentNullException">The provider is an empty GUID and/or <paramref name="connectionString" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The specified provider is unknown to the dialog box.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.LoadProviderSelections">
      <summary>Loads information about which DDEX provider is selected by default for each data source.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.LoadSourceSelection">
      <summary>Loads information about which data source is currently selected.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SafeConnectionString">
      <summary>Gets or sets the connection string that excludes sensitive data.</summary>
      <returns>A string value containing the connection string that excludes sensitive data.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SaveProviderSelections">
      <summary>Saves information about which DDEX provider is selected by default for each data source.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SaveSelection">
      <summary>Gets or sets a value indicating whether the caller of the dialog box should persist the currently selected data source and DDEX provider combination.</summary>
      <returns>true if the dialog box should persist the currently selected data source and DDEX provider combination; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SaveSourceSelection">
      <summary>Saves information about which data source is currently selected.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SelectedProvider">
      <summary>Gets or sets the data provider currently selected in the connection dialog box, using the data provider's GUID.</summary>
      <returns>The <see cref="T:System.Guid" /> of the data provider currently selected in the dialog box.</returns>
      <exception cref="T:System.InvalidOperationException">The value of <see cref="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SelectedSource" /> for the selected provider is an empty GUID, and the specified GUID is not empty.</exception>
      <exception cref="T:System.ArgumentException">The GUID specified for the selected provider is not a registered DDEX provider.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.SelectedSource">
      <summary>Gets or sets a GUID value indicating the current selected data source.</summary>
      <returns>Returns a <see cref="T:System.Guid" /> object reflecting the current data source.</returns>
      <exception cref="T:System.ArgumentException">The GUID specified for the selected provider is not a registered DDEX provider.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ShowDialog">
      <summary>Shows the Add Connection dialog box pre-populated with the data provider and connection string settings.</summary>
      <returns>true if the dialog returned <see cref="F:System.Windows.Forms.DialogResult.OK" />; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.ShowDialog(System.Boolean)">
      <summary>Shows the Add Connection dialog box pre-populated with the data provider and connection string settings.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing an open connection based on the connection string settings.</returns>
      <param name="connect">A Boolean value indicating whether the dialog box should attempt to open the connection before returning.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.Title">
      <summary>Gets or sets the string representing the text shown in the connection dialog box title bar.</summary>
      <returns>The string representing the text shown in the title bar of the dialog box.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.UnspecifiedSource">
      <summary>Gets a GUID representing an unspecified data source.</summary>
      <returns>A GUID representing an unspecified data source.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog.VerifyConfiguration">
      <summary>Occurs when the OK button is clicked in the Add Connection dialog box. Clients can use this event to perform configuration checking.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialogFactory">
      <summary>Represents the interface that provides the ability to create an instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialogFactory.CreateConnectionDialog">
      <summary>Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionDialog" /> class.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionEvents">
      <summary>Represents basic events for a data connection.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataConnectionEvents.MessageReceived">
      <summary>Occurs when a message is received from the data source.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataConnectionEvents.StateChanged">
      <summary>Occurs when the state of the data connection is changed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionFactory">
      <summary>Provides the ability to create stand-alone instances of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionFactory.CreateConnection(System.Guid,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> class with the specified connection information.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing a data connection.</returns>
      <param name="provider">The unique identifier of a DDEX provider.</param>
      <param name="connectionString">An unencrypted or encrypted string containing connection information.</param>
      <param name="encryptedString">Indicates whether the <paramref name="connectionString" /> parameter is unencrypted or encrypted. Specify true if encrypted.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cconnectionString" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="provider" /> is not a registered DDEX provider.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionFactory.MakeConnectionFrom(System.Guid,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> class for the specified provider from an existing underlying provider object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing a data connection.</returns>
      <param name="provider">The unique identifier of a DDEX provider.</param>
      <param name="providerObj">An existing underlying provider object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="providerObj" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="provider" /> is not a registered DDEX provider.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager">
      <summary>Represents a shared set of data connection objects that are created on demand and managed by Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager.GetConnection(System.Guid,System.String,System.Boolean)">
      <summary>Retrieves an existing data connection or creates a new data connection that matches the specified provider GUID and connection string.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing the data connection.</returns>
      <param name="provider">The GUID of the DDEX provider.</param>
      <param name="connectionString">The connection string in unencrypted or encrypted form.</param>
      <param name="encryptedString">A Boolean value indicating whether the connection string is encrypted (true) or unencrypted (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager.GetConnection(System.Guid,System.String,System.Boolean,System.Boolean)">
      <summary>Retrieves an existing data connection or creates a new data connection that matches the specified provider GUID and connection string. Also, optionally updates the connection string of the returned connection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing the data connection.</returns>
      <param name="provider">The GUID of the DDEX provider.</param>
      <param name="connectionString">The connection string in unencrypted or encrypted form.</param>
      <param name="encryptedString">A Boolean value indicating whether the connection string is encrypted (true) or unencrypted (false).</param>
      <param name="update">A Boolean value indicating whether the data connection's connection string value should be updated with the specified connection string (true) or not (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager.InvalidateConnection(Microsoft.VisualStudio.Data.Services.IVsDataConnection)">
      <summary>Removes the specified data connection if it exists and is a weak reference.</summary>
      <returns>true if the specified data connection is found and removed; otherwise, false.</returns>
      <param name="connection">The data connection object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager.InvalidateConnection(System.Guid,System.String,System.Boolean)">
      <summary>Removes the specified data connection if it exists and is a weak reference.</summary>
      <returns>true if the specified data connection is found and removed; otherwise, false.</returns>
      <param name="provider">The GUID of the DDEX provider.</param>
      <param name="connectionString">The connection string in unencrypted or encrypted form.</param>
      <param name="encryptedString">A Boolean value indicating whether the connection string is encrypted (true) or unencrypted (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager.IsManaging(Microsoft.VisualStudio.Data.Services.IVsDataConnection)">
      <summary>Indicates whether the connection manager is managing the specified data connection.</summary>
      <returns>true if the connection manager is managing the specified data connection; otherwise, false.</returns>
      <param name="connection">The data connection object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataConnectionManager.IsManaging(System.Guid,System.String,System.Boolean)">
      <summary>Indicates whether the connection manager is managing the data connection specified by the provider, the connection string, and the encrypted connection string.</summary>
      <returns>true if the connection manager is managing the specified data connection; otherwise, false.</returns>
      <param name="provider">The GUID of the DDEX provider.</param>
      <param name="connectionString">The connection string in unencrypted or encrypted form.</param>
      <param name="encryptedString">A Boolean value indicating whether the connection string is encrypted (true) or unencrypted (false).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection">
      <summary>Represents the collection of connection node objects in Server Explorer in Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Contains(Microsoft.VisualStudio.Data.Services.IVsDataObject)">
      <summary>Indicates whether Server Explorer contains a connection node corresponding to the specified data object.</summary>
      <returns>true if Server Explorer contains the specified connection node; otherwise, false.</returns>
      <param name="obj">The data object representing the connection node to look for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="obj" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Contains(System.Int32)">
      <summary>Indicates whether Server Explorer contains a connection node corresponding to the specified data object identifier.</summary>
      <returns>true if Server Explorer contains the specified connection node; otherwise, false.</returns>
      <param name="itemId">An integer value representing the ID of the data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Contains(System.String)">
      <summary>Indicates whether Server Explorer contains a connection node corresponding to the specified name.</summary>
      <returns>true if Server Explorer contains the specified connection node; otherwise, false.</returns>
      <param name="name">The name of the connection node to look for.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Contains(System.String,System.Object[])">
      <summary>Indicates whether Server Explorer contains a connection node corresponding to the specified type name and identifiers.</summary>
      <returns>true if Server Explorer contains the specified connection node; otherwise, false.</returns>
      <param name="typeName">The name of the requested data object's type.</param>
      <param name="identifier">An array of identifier parts that uniquely identify the requested data object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> or <paramref name="identifier" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Find(Microsoft.VisualStudio.Data.Services.IVsDataObject)">
      <summary>Retrieves the specified connection node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the connection node in Server Explorer, or null if the connection node is not found.</returns>
      <param name="obj">An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> object that identifies the connection node to look for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="obj" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Find(System.String,System.Object[])">
      <summary>Retrieves a connection node corresponding to the specified type name and identifiers.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the connection node in Server Explorer, or null if the node is not found.</returns>
      <param name="typeName">The name of the requested data object's type.</param>
      <param name="identifier">An array of identifier parts that uniquely identify the requested data object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> or <paramref name="identifier" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.IndexOf(Microsoft.VisualStudio.Data.Services.IVsDataObject)">
      <summary>Retrieves the index of the connection node corresponding to the specified data object.</summary>
      <returns>The index of the connection node in Server Explorer, if found; otherwise, -1.</returns>
      <param name="obj">The data object to get the index for.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.IndexOf(System.Int32)">
      <summary>Retrieves the index of the connection node corresponding to the specified data object identifier.</summary>
      <returns>The index of the connection node in Server Explorer, if found; otherwise, -1.</returns>
      <param name="itemId">An integer value representing the ID of the data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.IndexOf(System.String)">
      <summary>Retrieves the index of the connection node corresponding to the specified name.</summary>
      <returns>The index of the connection node in Server Explorer, if found; otherwise, -1.</returns>
      <param name="name">The name of the connection node to get the index for.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.IndexOf(System.String,System.Object[])">
      <summary>Retrieves the index of the connection node corresponding to the specified name type name and identifiers.</summary>
      <returns>The index of the connection node in Server Explorer, if found; otherwise, -1.</returns>
      <param name="typeName">The name of the requested data object's type.</param>
      <param name="identifier">An array of identifier parts that uniquely identify the requested data object.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection.Item(System.String)">
      <summary>Gets the connection node with the specified name in Server Explorer.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object containing the connection node requested, or null if the connection node is not found.</returns>
      <param name="name">The name of the connection node to retrieve in Server Explorer.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection">
      <summary>Represents a connection that exists in the Visual Studio Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.Connection">
      <summary>Gets the data connection corresponding to the current connection node in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataConnection" /> object representing the data connection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.ConnectionNode">
      <summary>Gets the current connection node in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the current connection node.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.DisplayName">
      <summary>Gets or sets the display name of the root node for the data connection.</summary>
      <returns>The string literal display name of the root node for the connection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.EncryptedConnectionString">
      <summary>Gets an encrypted string containing information about the data connection.</summary>
      <returns>An encrypted string containing information about the connection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.FindDocumentNode(System.String)">
      <summary>Gets the specified connection node through the data view hierarchy.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested node in Server Explorer.</returns>
      <param name="documentMoniker">The moniker for the node to find.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.FindDocumentNode(System.String,System.Boolean)">
      <summary>Gets the specified connection node through the data view hierarchy. Optionally, searches unexpanded nodes that are not populated.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested connection node in Server Explorer.</returns>
      <param name="documentMoniker">The moniker for the node to find.</param>
      <param name="searchUnpopulatedChildren">A Boolean value indicating whether to search nodes that have never been expanded and are thus not populated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.FindNode(System.Int32)">
      <summary>Retrieves the connection node from Server Explorer based on its ID.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested connection node in Server Explorer.</returns>
      <param name="itemId">An integer value identifying the connection node to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.FindNode(System.String)">
      <summary>Retrieves the connection node from Server Explorer based on its name.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested connection node in Server Explorer.</returns>
      <param name="fullName">The name of the requested connection node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.FindNode(System.String,System.Boolean)">
      <summary>Retrieves the connection node from Server Explorer based on its name. Optionally, searches unexpanded nodes that are not populated.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested connection node in Server Explorer.</returns>
      <param name="fullName">The name of the connection node to get.</param>
      <param name="searchUnpopulatedChildren">A Boolean value indicating whether to search nodes that have never been expanded and are thus not populated.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeChanged">
      <summary>Occurs when a node has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeExpandedOrRefreshed">
      <summary>Occurs when a node is expanded or refreshed in Server Explorer.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeInserted">
      <summary>Occurs when a node is inserted in Server Explorer.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.NodeRemoving">
      <summary>Occurs just before a node removal from Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.Provider">
      <summary>Gets the unique identifier of the DDEX provider for the Server Explorer connection.</summary>
      <returns>The unique identifier of the DDEX provider for the connection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.SelectedNodes">
      <summary>Gets the currently selected nodes in Server Explorer for a single Server Explorer connection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection" /> object representing the currently selected nodes in Server Explorer.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection.Source">
      <summary>Gets the data source of the current connection node.</summary>
      <returns>The <see cref="T:System.Guid" /> of the data source.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager">
      <summary>Provides the ability to perform common tasks with data connections in Server Explorer, such as adding, removing, or finding a connection, among others.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager.AddConnection(System.String,System.Guid,System.String,System.Boolean)">
      <summary>Adds a new data connection with the specified properties.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection" /> object representing the new data connection.</returns>
      <param name="connectionName">The name of the data connection.</param>
      <param name="provider">The GUID of the DDEX provider.</param>
      <param name="connectionString">The connection string, in unencrypted or encrypted form, containing the connection properties.</param>
      <param name="encryptedString">A Boolean value indicating whether the <paramref name="connectionString" /> parameter is encrypted (true) or not (false).</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager.Connections">
      <summary>Gets a collection of key/value pairs containing all existing data connections.</summary>
      <returns>A <see cref="T:System.IDictionary" /> object that contains a collection of key/value pairs containing all existing data connections. The key holds the name of the connection, and the value holds the corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection" /> connection object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager.FindConnection(System.Guid,System.String,System.Boolean)">
      <summary>Searches for an existing data connection that matches the specified properties.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection" /> object representing an existing data connection that matches the specified properties, or null if none is found.</returns>
      <param name="provider">The GUID of the DDEX provider for the associated data connection.</param>
      <param name="connectionString">The connection string, in unencrypted or encrypted form, containing the connection properties.</param>
      <param name="encryptedString">A Boolean value indicating whether the <paramref name="connectionString" /> parameter is encrypted (true) or not (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager.PromptAndAddConnection">
      <summary>Prompts the user with the connection dialog box to add a new connection in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection" /> object representing the new data connection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager.RemoveConnection(Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection)">
      <summary>Removes an existing data connection from Server Explorer.</summary>
      <param name="explorerConnection">The data connection to remove.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="explorerConnection" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnectionManager.SelectConnection(Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection)">
      <summary>Selects the specified data connection in Server Explorer.</summary>
      <param name="explorerConnection">The data connection to select.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode">
      <summary>Represents any node in the Visual Studio Server Explorer that appears as a child to the Data Connections node.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.AddToSelection">
      <summary>Adds the current node to a group of selected nodes. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanCopy">
      <summary>Gets a value indicating whether the copy command is supported on the node.</summary>
      <returns>true if the copy command is supported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanCut">
      <summary>Gets a value indicating whether the cut command is supported on the node.</summary>
      <returns>true if the cut command is supported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanDelete">
      <summary>Gets a value indicating whether the delete command is supported on the node.</summary>
      <returns>true if the delete command is supported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanOpen">
      <summary>Gets a value indicating whether the open command is supported on the node.</summary>
      <returns>true if the open command is supported; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanOpenSpecificDocumentView(System.Guid)">
      <summary>Indicates whether a document view window can be opened for the current node.</summary>
      <returns>true if a document view window can be opened; otherwise, false.</returns>
      <param name="logicalView">A GUID value for the logical view obtained from the <see cref="T:Microsoft.VisualStudio.Shell.LogicalView" /> enumeration.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanPaste">
      <summary>Gets a value indicating whether the paste command is supported on the node.</summary>
      <returns>true if the paste command is supported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.CanRename">
      <summary>Gets a value indicating whether the rename command is supported on the node.</summary>
      <returns>true if the rename command is supported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Caption">
      <summary>Gets the caption of the node.</summary>
      <returns>A <see cref="T:System.String" /> value holding the caption text.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Children">
      <summary>Gets a collection of all child nodes that appear under this node in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection" /> object containing the child nodes.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Collapse">
      <summary>Collapses the current node in order to hide its child nodes in Server Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Copy">
      <summary>Creates a copy of the current node.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object representing a copy of the current node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Cut">
      <summary>Creates a copy of the current node and then deletes the node.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object representing a copy of the current node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Delete">
      <summary>Deletes the current node from Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.DocumentMoniker">
      <summary>Gets the document moniker for this node through the data view hierarchy.</summary>
      <returns>A <see cref="T:System.String" /> value holding the document moniker for this node, or null if the moniker could not be obtained.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.DoDefaultAction">
      <summary>Executes the default command, if any, on the current node.</summary>
      <returns>true if this method executed the default command; false if there is no default command that can be executed on this node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Expand">
      <summary>Expands the current node in Server Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.ExpandToShow">
      <summary>Expands the parent nodes in order to show the current node in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.ExplorerConnection">
      <summary>Gets the data explorer connection that is currently being used.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection" /> object representing the data connection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.ExtendSelectionToNode">
      <summary>Extends the selected items in the UI up to the current node, resulting in multiple node selection.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.FullName">
      <summary>Gets the full name of the node.</summary>
      <returns>A <see cref="T:System.String" /> value holding the full name of the current node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.FullNameEquals(System.String)">
      <summary>Verifies the full name of the current node.</summary>
      <returns>true if the current node's full name matches the specified full name; otherwise, false.</returns>
      <param name="otherFullName">The node full name to check for.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.GetChildren(System.Boolean)">
      <summary>Retrieves a collection of all child nodes for the current node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerChildNodeCollection" /> object containing the child nodes of this node.</returns>
      <param name="allowAsync">A Boolean value indicating whether to allow an asynchronous execution (true) or not (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.GetCommand(System.ComponentModel.Design.CommandID)">
      <summary>Gets a menu command corresponding to the specified <see cref="T:System.ComponentModel.Design.CommandID" /> value.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> object as the menu command.</returns>
      <param name="commandId">A <see cref="T:System.ComponentModel.Design.CommandID" /> object containing a numeric command ID and a GUID menu group identifier.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.HasBeenExpanded">
      <summary>Gets a value indicating whether the current node has been expanded.</summary>
      <returns>true if the node has been expanded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsDiscarded">
      <summary>Gets a value indicating whether the current node is discarded.</summary>
      <returns>true if the current node is discarded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsExpandable">
      <summary>Gets a value indicating whether the current node can be expanded to show lower-level child nodes.</summary>
      <returns>true if the node is expandable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsExpanded">
      <summary>Gets a value indicating whether the current node is expanded.</summary>
      <returns>true if the node is expanded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsExpanding">
      <summary>Gets a value indicating whether the current node is in the process of being expanded.</summary>
      <returns>true if node is being expanded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsPlaced">
      <summary>Gets a value indicating whether the current node has been inserted into the Server Explorer tree.</summary>
      <returns>true if node is placed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsRefreshing">
      <summary>Gets a value indicating whether the current node is in the process of being refreshed.</summary>
      <returns>true if the node is being refreshed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.IsVisible">
      <summary>Gets a value indicating whether the current node is visible in the Server Explorer window.</summary>
      <returns>true if the current node is visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.ItemId">
      <summary>Gets a numerical value that identifies the current node.</summary>
      <returns>An <see cref="T:System.Int32" /> value that identifies the current node.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Name">
      <summary>Gets the name of the current node.</summary>
      <returns>A <see cref="T:System.String" /> value holding the name of the node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.NameEquals(System.String)">
      <summary>Verifies the name of the current node.</summary>
      <returns>true if the current node's name matches the specified name; otherwise, false.</returns>
      <param name="otherName">The node name to check for.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.NextSibling">
      <summary>Gets the next node that is a sibling to the current node in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the next node that is a sibling to the current node.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Object">
      <summary>Gets the data object associated with the current Server Explorer node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> object containing the data object associated with the current Server Explorer node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.OpenDocument">
      <summary>Opens the current node as a document window frame in the Visual Studio environment.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> object representing the opened document window.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.OpenSpecificDocumentView(System.Guid)">
      <summary>Opens the current node as a document window frame in the Visual Studio environment.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> object representing the opened document window.</returns>
      <param name="logicalView">A GUID value for the logical view obtained from the <see cref="T:Microsoft.VisualStudio.Shell.LogicalView" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.OpenSpecificDocumentView(System.Guid,System.Object)">
      <summary>Opens the current node as a document window frame in the Visual Studio environment.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> object representing the opened document window.</returns>
      <param name="logicalView">A GUID value for the logical view obtained from the <see cref="T:Microsoft.VisualStudio.Shell.LogicalView" /> enumeration.</param>
      <param name="existingDocumentData">Object containing any existing data in the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.OpenSpecificDocumentView(System.Guid,System.Object,System.Boolean)">
      <summary>Opens the current node as a document window frame in the Visual Studio environment.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> object representing the opened document window.</returns>
      <param name="logicalView">A GUID value for the logical view obtained from the <see cref="T:Microsoft.VisualStudio.Shell.LogicalView" /> enumeration.</param>
      <param name="existingDocumentData">Object containing any existing data in the document.</param>
      <param name="doNotShowWindow">A Boolean value indicating whether to hide the open window (true) or not (false).</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Parent">
      <summary>The parent node of the current node in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the parent node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Paste">
      <summary>Pastes the node from the Clipboard to Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.PreviousSibling">
      <summary>Gets a node that is a sibling to the current node and that is immediately before the current node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the previous node that is a sibling to the current node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Refresh">
      <summary>Refreshes the current node and its child nodes asynchronously, if any are expanded in Server Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Refresh(System.Boolean)">
      <summary>Refreshes the current node and its child nodes, if any are expanded in Server Explorer.</summary>
      <param name="noAsync">A Boolean value indicating whether to execute the refresh synchronously (true) or asynchronously (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Rename(System.String)">
      <summary>Replaces the caption of the current node with a new name.</summary>
      <param name="newCaption">The new caption name to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Select">
      <summary>Selects the current node in Server Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode.Unselect">
      <summary>Deselects the current node in Server Explorer.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection">
      <summary>Represents a group of currently selected nodes in the Visual Studio Server Explorer, together with a set of properties and actions.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CanCopyAll">
      <summary>Gets a value indicating whether the group of currently selected nodes in Server Explorer can be copied to the Clipboard.</summary>
      <returns>true if the node selection can be copied; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CanCutAll">
      <summary>Gets a value indicating whether the group of currently selected nodes in Server Explorer can be cut.</summary>
      <returns>true if the node selection can be cut; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CanDeleteAll">
      <summary>Gets a value indicating whether the group of currently selected nodes in Server Explorer can be deleted.</summary>
      <returns>true if the node selection can be deleted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CanOpenAll">
      <summary>Gets a value indicating whether the group of currently selected nodes in Server Explorer can be opened.</summary>
      <returns>true if the node selection can be opened; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CollapseAll">
      <summary>Collapses all the nodes present in the node selection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Contains(Microsoft.VisualStudio.Data.Services.IVsDataObject)">
      <summary>Indicates whether the group of selected nodes contains the node specified as a data object.</summary>
      <returns>true if the specified node is present in the node selection; otherwise, false.</returns>
      <param name="obj">A data object containing the properties that identify the node to retrieve.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Contains(System.Int32)">
      <summary>Indicates whether the group of selected nodes contains the node specified by its numerical identifier value.</summary>
      <returns>true if the specified node is present in the node selection; otherwise, false.</returns>
      <param name="itemId">A numerical value that identifies the node to check the presence of.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Contains(System.String)">
      <summary>Indicates whether the group of selected nodes contains the node specified by its full name.</summary>
      <returns>true if the specified node is present in the node selection; otherwise, false.</returns>
      <param name="fullName">The full name of the node to retrieve.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Contains(System.String,System.Object[])">
      <summary>Indicates whether the group of selected nodes contains the node specified by its full name.</summary>
      <returns>true if the specified node is present in the node selection; otherwise, false.</returns>
      <param name="typeName">The name of the data object type that is represented in the node to retrieve.</param>
      <param name="identifier">An array of data object identifier parts that represent the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CopyAll">
      <summary>Copies all the nodes present in the group of selected nodes to the Clipboard.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object containing the copied nodes.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.CutAll">
      <summary>Copies all the nodes present in the group of selected nodes to the Clipboard, and then deletes them.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object containing the copied nodes.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.DeleteAll">
      <summary>Deletes all the nodes present in the group of selected nodes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.DoDefaultActionOnAll">
      <summary>Executes the default command, if any, on the group of selected nodes.</summary>
      <returns>true if the default command was executed on all nodes in the selection, false if this method failed to execute the default command on at least one node in the selection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.ExpandAll">
      <summary>Expands all the nodes present in the group of selected nodes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Find(Microsoft.VisualStudio.Data.Services.IVsDataObject)">
      <summary>Retrieves the specified node from the group of selected nodes.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested node.</returns>
      <param name="obj">A data object containing the properties that identify the node to retrieve.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Find(System.String,System.Object[])">
      <summary>Retrieves the specified node from the group of selected nodes.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the requested node.</returns>
      <param name="typeName">The name of the data object type that is represented in the node to retrieve.</param>
      <param name="identifier">An array of data object identifier parts that represent the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.GetCommand(System.ComponentModel.Design.CommandID)">
      <summary>Gets a menu command corresponding to the specified <see cref="T:System.ComponentModel.Design.CommandID" /> value for the group of selected nodes.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> object as the menu command.</returns>
      <param name="commandId">A <see cref="T:System.ComponentModel.Design.CommandID" /> object containing a numeric command ID and a GUID menu group identifier.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Item(System.Int32)">
      <summary>Gets the node specified by its numerical identifier from the group of selected nodes in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the specified node, or null if not found.</returns>
      <param name="itemId">A numerical value identifying the node to retrieve.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Item(System.String)">
      <summary>Gets the node specified by its full name from the group of selected nodes in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNode" /> object representing the specified node, or null if not found.</returns>
      <param name="fullName">The full name of the node to retrieve.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.OpenAllDocuments">
      <summary>Opens all the nodes in the group of selected nodes as document window frames in the Visual Studio environment.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.RefreshAll">
      <summary>Refreshes all the nodes in the group node selection (and their child nodes if any are expanded in Server Explorer) asynchronously.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.RefreshAll(System.Boolean)">
      <summary>Refreshes all the nodes in the group node selection (and their child nodes if any are expanded in Server Explorer).</summary>
      <param name="noAsync">A Boolean value indicating whether to execute the refresh synchronously (true) or asynchronously (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Remove(Microsoft.VisualStudio.Data.Services.IVsDataObject)">
      <summary>Removes the node specified by a data object from the node selection group.</summary>
      <returns>true if the node was removed; otherwise, false.</returns>
      <param name="obj">A data object containing the properties that identify the node to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Remove(System.Int32)">
      <summary>Removes the node specified by its numerical identifier value from the node selection group.</summary>
      <returns>true if the node was removed; otherwise, false.</returns>
      <param name="itemId">A numerical value that identifies the node to be removed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Remove(System.String)">
      <summary>Removes the node specified by its full name from the node selection group.</summary>
      <returns>true if the node was removed; otherwise, false.</returns>
      <param name="fullName">The full name of the node to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataExplorerNodeSelection.Remove(System.String,System.Object[])">
      <summary>Removes the specified node from the node selection group.</summary>
      <returns>true if the node was removed; otherwise, false.</returns>
      <param name="typeName">The name of the data object type that is represented in the node to remove.</param>
      <param name="identifier">An array of data object identifier parts that represent the node.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject">
      <summary>Represents a well-known concept for use by a generic designer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.Identifier">
      <summary>Gets the list of identifier parts that uniquely identify the current generic mapped type.</summary>
      <returns>The list of identifier parts that uniquely identify the current generic mapped type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.IsDeleted">
      <summary>Gets a value indicating whether the current generic mapped type is deleted.</summary>
      <returns>true if the generic mapped type is deleted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.Name">
      <summary>Gets the name of the generic mapped type.</summary>
      <returns>The name of the generic mapped type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.Properties">
      <summary>Gets name/value pairs containing the property names and values associated with the current generic mapped type.</summary>
      <returns>A collection of name/value pairs containing the property names and values associated with the current generic mapped type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.Selector">
      <summary>Gets a selector object that enables the retrieval of data source–specific metadata from the data object support XML file.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector" /> object that allows the retrieval of data source–specific metadata from the data object support XML file.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.Type">
      <summary>Gets the type name as a string for the current generic mapped type.</summary>
      <returns>The type name as a string for the current generic mapped type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject.UnderlyingObject">
      <summary>Gets the underlying object that is contained by the current generic mapped type.</summary>
      <returns>The underlying object that is contained by the current generic mapped type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectCallMapperConversionStep">
      <summary>Represents a call mapper conversion step for a data object support mapped type.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectCallMapperConversionStep.GetParameters">
      <summary>Returns the parameters used in this conversion step.</summary>
      <returns>An array containing the parameters used in this conversion step.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectCallMapperConversionStep.ImplementationType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataMappedObjectConverter" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> representing the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataMappedObjectConverter" /> support entity.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion">
      <summary>Represents a conversion for a data object support mapped type and contains the conversion steps needed to convert a data source–specific object to a mapped object.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion.CallMapperStep">
      <summary>Gets a conversion step that is part of the conversion from a data source–specific type to a mapped type.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectCallMapperConversionStep" /> object representing one conversion step.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion.Steps">
      <summary>Returns all the conversion steps that are necessary to convert a data source–specific type to a mapped type.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectCallMapperConversionStep" /> objects representing all the conversion steps.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversionStep">
      <summary>Represents a conversion step for a data object support mapped type.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversionStep.Apply(System.Object[])">
      <summary>Applies the conversion specified by the parameters and returns the converted values.</summary>
      <returns>An array containing converted values.</returns>
      <param name="values">The underlying values used in the conversion.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection">
      <summary>Represents the Selection XML tag corresponding to this mapped type in the data object support XML file.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection.Filter">
      <summary>Gets the filter.</summary>
      <returns>A string representing the filter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection.Ordering">
      <summary>Gets the ordering as a string containing a comma-delimited sequence of data objects.</summary>
      <returns>A comma-delimited sequence of data objects</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection.Restrictions">
      <summary>Gets a list of restrictions.</summary>
      <returns>A list of string values representing the restrictions present in the current Selection tag.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection.SubstitutionValues">
      <summary>Gets a list of substitution values.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSubstitutionValue" /> objects representing the substitution values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector">
      <summary>Represents a selector of mapped objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SelectMappedObjects``1">
      <summary>Retrieves a list of mapped data objects from the object store.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject" /> objects representing the mapped objects.</returns>
      <typeparam name="T">The type of the parameter.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SelectMappedObjects``1(System.Object[])">
      <summary>Retrieves a list of mapped data objects, filtered by the specified restrictions.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject" /> objects, filtered by the specified restrictions.</returns>
      <param name="restrictions">An array of restrictions that restrict the objects returned from the object store to the ones matching these restrictions.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
      <exception cref="T:System.ArgumentException">The restrictions are not valid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SelectMappedObjects``1(System.Object[],System.Boolean)">
      <summary>Retrieves a list of mapped data objects filtered by the specified restrictions.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject" /> objects matching the specified restrictions.</returns>
      <param name="restrictions">A list of identifiers that restrict the objects returned from the object store to the ones matching these restrictions.</param>
      <param name="refresh">A Boolean value indicating whether to update the list of required restrictions and properties.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
      <exception cref="T:System.ArgumentException">The restrictions are not valid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SelectMappedObjects``1(System.String)">
      <summary>Retrieves a list of mapped data objects of the specified type.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject" /> objects representing the mapped objects for the specified type.</returns>
      <param name="specificTypeName">The name of the type to retrieve mapped data objects for. This is the generic data type name, which is found in the data object store XML in the &lt;MappedType&gt; element.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
      <exception cref="T:System.ArgumentException">The type name is not valid.</exception>
      <exception cref="T:System.NotSupportedException">The type name is not supported.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SelectMappedObjects``1(System.String,System.Object[])">
      <summary>Retrieves a list of mapped data objects for the specified type name, filtered by the specified restrictions.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject" /> objects for the specified type, matching the specified restrictions.</returns>
      <param name="specificTypeName">The name of the type to retrieve mapped data objects for. This is the generic data type name, which is found in the data object store XML in the &lt;MappedType&gt; element.</param>
      <param name="restrictions">A list of identifiers that restrict the objects returned from the object store to the ones matching these restrictions.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
      <exception cref="T:System.ArgumentException">The type name is invalid.</exception>
      <exception cref="T:System.NotSupportedException">The type name is not supported.</exception>
      <exception cref="T:System.ArgumentException">The restrictions are invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SelectMappedObjects``1(System.String,System.Object[],System.Boolean)">
      <summary>Retrieves a list of mapped data objects for the specified type name, filtered by the specified restrictions.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObject" /> objects for the specified type, matching the specified restrictions.</returns>
      <param name="specificTypeName">The name of the type to retrieve mapped data objects for. This is the generic data type name, which is found in the data object store XML in the &lt;MappedType&gt; element.</param>
      <param name="restrictions">A list of identifiers that restrict the objects returned from the object store to the ones matching these restrictions.</param>
      <param name="refresh">A Boolean value indicating whether to update the list of required restrictions and properties.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
      <exception cref="T:System.ArgumentException">The type name is invalid.</exception>
      <exception cref="T:System.NotSupportedException">The type name is not supported.</exception>
      <exception cref="T:System.ArgumentException">The restrictions are invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SupportsType``1">
      <summary>Indicates whether the mapped object selector can map the relational object type represented by the generic type T to an underlying type.</summary>
      <returns>true if the type is supported; otherwise, false.</returns>
      <typeparam name="T">The type of the parameter.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelector.SupportsType``1(System.String)">
      <summary>Indicates whether the mapped object selector can map the relational object type represented by the generic type T and the specific type name to an underlying type.</summary>
      <returns>true if the type is supported; otherwise, false.</returns>
      <param name="specificTypeName">The specific type name of the relational object to examine.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSubstitutionValue">
      <summary>Represents a substitution value for a data object support mapped type.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSubstitutionValue.Conversion">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion" /> object containing the conversion steps.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion" /> object containing the conversion steps.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSubstitutionValue.MappedRestrictions">
      <summary>Gets the mapped restrictions that are to be converted to underlying restrictions.</summary>
      <returns>A collection of string values representing the restrictions that are to be converted to the underlying restrictions.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType">
      <summary>Represents a data object support mapped type, that is, the generic type that is converted from the underlying data source–specific types.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType.GetIdentifier(Microsoft.VisualStudio.Data.Services.IVsDataObjectType)">
      <summary>Returns the identifier for this mapped type as a collection of identifier parts.</summary>
      <returns>A collection of identifier parts represented as name/value pairs containing the identifier part names and their corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectTypeMember" /> objects.</returns>
      <param name="underlyingType">The underlying type to which this mapped type corresponds. This is necessary because the mapped type can map to several underlying types.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType.GetProperties(Microsoft.VisualStudio.Data.Services.IVsDataObjectType)">
      <summary>Returns the properties of this mapped type.</summary>
      <returns>A collection of name/value pairs containing the mapped properties as the property names and their corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectTypeMember" /> objects</returns>
      <param name="underlyingType">The underlying type to which this mapped type corresponds. This is necessary because the mapped type can map to several underlying types.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType.GetSelection(Microsoft.VisualStudio.Data.Services.IVsDataObjectType)">
      <summary>Returns an <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection" /> object representing the content of the Selection XML tag corresponding to this mapped type.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectSelection" /> object representing the content of the Selection XML tag corresponding to this mapped type.</returns>
      <param name="underlyingType">The underlying type to which this mapped type corresponds. This is necessary because the mapped type can map to several underlying types.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType.Name">
      <summary>Gets the name of the current mapped type.</summary>
      <returns>The name of the current mapped type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType.UnderlyingTypes">
      <summary>Gets the data source–specific underlying types that correspond to the mapped type.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> objects representing the underlying types that correspond to the mapped type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectTypeMember">
      <summary>Represents a member of a data object support mapped type.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectTypeMember.Conversion">
      <summary>Gets the current instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion" /> stored in this class.</summary>
      <returns>The current instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectConversion" /> stored in this class.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectTypeMember.Name">
      <summary>Gets the name of the mapped type member.</summary>
      <returns>The name of the mapped type member.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectTypeMember.UnderlyingMembers">
      <summary>Gets the data source–specific underlying members corresponding to this mapped type member as a collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> objects.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> objects representing the data source–specific underlying members corresponding to this mapped type member.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObject">
      <summary>Represents a data object.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObject.Identifier">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectIdentifier" /> object that identifies the current data object.</summary>
      <returns>The current object's identifier.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObject.IsDeleted">
      <summary>Gets a value indicating whether the data object has been deleted.</summary>
      <returns>true if the data object has been deleted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObject.Name">
      <summary>Gets the name of the data object.</summary>
      <returns>The name of the data object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObject.Properties">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectPropertyDictionary" /> object containing the properties of this data object.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectPropertyDictionary" /> object containing the properties of this data object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObject.Store">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore" /> object representing the object store, that is, a cache of data source–specific data objects.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore" /> object representing the object store, that is, a cache of data source–specific data objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObject.Type">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> object representing a data object support type that is data source specific.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> object representing a data object support type that is data source specific.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents">
      <summary>Represents a set of events that are raised when data objects are added to, changed in, or deleted from a data source.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.EventGroupEnded">
      <summary>Occurs when an event group has ended.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.EventGroupStarted">
      <summary>Occurs when an event group starts.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.ObjectAdded">
      <summary>Occurs when a data object is added.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.ObjectChanged">
      <summary>Occurs when a data object is changed.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEvents.ObjectDeleted">
      <summary>Occurs when a data object is deleted.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker">
      <summary>Represents the ability to raise events when data objects are added, changed, or deleted on a data source.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.EndEventGroup(System.Int32)">
      <summary>Removes the specified event group.</summary>
      <param name="groupId">A numerical value representing the ID of the event group to end.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">The group ID is not valid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectAdded(System.Int32,System.String,System.Object[])">
      <summary>Raises the ObjectAdded event or adds the event to the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">Invalid group ID. The group ID could not be validated.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectAdded(System.String,System.Object[])">
      <summary>Raises the ObjectAdded event.</summary>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.Int32,System.String,System.Object[])">
      <summary>Raises the ObjectChanged event or adds the event to the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">Invalid group ID. The group ID could not be validated.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.Int32,System.String,System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Raises the ObjectChanged event or adds the event to the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
      <param name="propertyValues">The old property values of the changed data object.</param>
      <param name="newPropertyValues">The new property values of the changed data object.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">Invalid group ID. The group ID could not be validated.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.Int32,System.String,System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object},System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Raises the ObjectChanged event or adds the event to the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the old data object.</param>
      <param name="propertyValues">The old property values of the changed data object.</param>
      <param name="newIdentifier">An array containing identifier parts that uniquely identify the new data object.</param>
      <param name="newPropertyValues">The new property values of the changed data object.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">Invalid group ID. The group ID could not be validated.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.Int32,System.String,System.Object[],System.Object[])">
      <summary>Raises the ObjectChanged event or adds the event to the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the old data object.</param>
      <param name="newIdentifier">An array containing identifier parts that uniquely identify the new data object.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">Invalid group ID. The group ID could not be validated.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.String,System.Object[])">
      <summary>Raises the ObjectChanged event.</summary>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.String,System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Raises the ObjectChanged event.</summary>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
      <param name="propertyValues">The old property values of the changed data object.</param>
      <param name="newPropertyValues">The new property values of the changed data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.String,System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object},System.Object[],System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Raises the ObjectChanged event.</summary>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the old data object.</param>
      <param name="propertyValues">The old property values of the changed data object.</param>
      <param name="newIdentifier">An array containing identifier parts that uniquely identify the new data object.</param>
      <param name="newPropertyValues">The new property values of the changed data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectChanged(System.String,System.Object[],System.Object[])">
      <summary>Raises the ObjectChanged event.</summary>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the old data object.</param>
      <param name="newIdentifier">An array containing identifier parts that uniquely identify the new data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectDeleted(System.Int32,System.String,System.Object[])">
      <summary>Raises the ObjectDeleted event or adds the event to the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">Invalid group ID. The group ID could not be validated.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RaiseObjectDeleted(System.String,System.Object[])">
      <summary>Raises the ObjectDeleted event.</summary>
      <param name="typeName">The name of the type of the data object for which to raise the event.</param>
      <param name="identifier">An array containing identifier parts that uniquely identify the data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.RollbackEventGroup(System.Int32)">
      <summary>Removes the specified event group.</summary>
      <param name="groupId">A numerical value representing the event group identifier. Specify 0 to avoid event groups and raise the event immediately.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">The group ID is not valid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectChangeEventsBroker.StartEventGroup(System.Int32)">
      <summary>Start a new event group.</summary>
      <returns>The group ID of the new event group.</returns>
      <param name="groupId">A numerical value representing the parent event group ID. Specify 0 to start a top-level event group, or specify a value greater than zero to start an event group beneath this group.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="groupId" /> parameter is less than zero, or is different than zero and greater than the count of existing event groups.</exception>
      <exception cref="T:System.ArgumentException">The group ID is not valid.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection">
      <summary>Represents a collection of data objects that are selected from an object store.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection.Contains(System.Object[])">
      <summary>Indicates whether the collection of data objects contains a data object corresponding to the specified identifier.</summary>
      <returns>true if the specified data object exists in the collection; otherwise, false.</returns>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object requested.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection.Contains(System.String)">
      <summary>Indicates whether the collection of data objects contains a data object corresponding to the specified identifier.</summary>
      <returns>true if the specified data object exists in the collection; otherwise, false.</returns>
      <param name="identifier">A string containing the identifier parts that uniquely identify the data object requested, separated by a delimiter character.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection.IndexOf(System.Object[])">
      <summary>Returns the index of the data object in the collection that matches the specified identifier.</summary>
      <returns>An integer value, greater than or equal to 0, representing the index of the data object in the collection that matches the specified identifier, or -1 if the data object is not found.</returns>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object requested.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection.IndexOf(System.String)">
      <summary>Returns the index of the data object in the collection that matches the specified identifier.</summary>
      <returns>An integer value, greater than or equal to 0, representing the index of the data object in the collection that matches the specified identifier, or -1 if the data object is not found.</returns>
      <param name="identifier">A string containing the identifier parts that uniquely identify the data object requested, separated by a delimiter character.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection.Item(System.Object[])">
      <summary>Gets from the collection, the data object that matches the specified identifier.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> object corresponding to the specified identifier.</returns>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object requested.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection.Item(System.String)">
      <summary>Gets from the collection the data object that matches the specified identifier.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> object corresponding to the specified identifier.</returns>
      <param name="identifier">A string containing the identifier parts that uniquely identify the data object requested, separated by a delimiter character.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectIdentifier">
      <summary>Represents the identifier of a data object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectIdentifier.ToArray">
      <summary>Converts the current <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectIdentifier" /> object to an array of identifier parts representing the identifier.</summary>
      <returns>An array of identifier parts representing the identifier.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectIdentifier.ToString(Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat)">
      <summary>Converts the current <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectIdentifier" /> object to a string that contains the identifier parts, which are separated by a delimiter character.</summary>
      <returns>A string representation of the identifier. The string contains the identifier parts separated by a delimiter character and in the specified format.</returns>
      <param name="format">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat" /> enumeration that specifies the type of formatting to use for the data object identifier string value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectPropertyDictionary">
      <summary>Represents the properties of a data object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.String[],System.Int32)">
      <summary>Copies the specified properties from the current collection of properties to the specified array of <see cref="T:System.Collections.Generic.KeyValuePair{System.String,System.Object}" /> objects.</summary>
      <param name="array">The array to copy the properties into.</param>
      <param name="properties">The specific properties to copy. Specify null to copy all the properties.</param>
      <param name="arrayIndex">The index of where to start copying in the destination array.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectService">
      <summary>Represents a service of a data object support type.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectService.GetParameters(System.String)">
      <summary>Returns the parameters of the specified method.</summary>
      <returns>An array containing the parameters of the specified method.</returns>
      <param name="method">The name of the method to get parameters for.</param>
      <exception cref="T:System.ArgumentNullException">The<paramref name=" method" /> parameter is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectService.ImplementationType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> as the class as that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector" /> support entity.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectService.TypeName">
      <summary>Gets the type name associated with the current instance of the data object service.</summary>
      <returns>A string representing the type name associated with the current instance of the data object service.</returns>
      <exception cref="T:System.TypeLoadException">The specified type cannot be loaded from the provider.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore">
      <summary>Represents a store, that is, a cache, of data source–specific data objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.CanSelectObjects(System.String)">
      <summary>Indicates whether the specified type can be selected from the data object support XML stream.</summary>
      <returns>true if the type can be selected; otherwise, false.</returns>
      <param name="typeName">The name of the data source–specific type to examine.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetDefaultOrdering(System.String)">
      <summary>Returns the default ordering that is used to sort the data source objects selected from the object store.</summary>
      <returns>A string of comma-delimited values representing the data objects that specify the sort order.</returns>
      <param name="typeName">The name of the data source–specific type to get the default ordering for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetExpensiveProperties(System.String)">
      <summary>Retrieves the expensive properties of the specified type.</summary>
      <returns>A list of strings representing the expensive properties for the specified type.</returns>
      <param name="typeName">The name of the data source–specific type to get properties for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetObject(System.String,System.Object[])">
      <summary>Retrieves the specified data object from the object store.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> representing the data object to retrieve.</returns>
      <param name="typeName">The data source–specific type name of the data object to retrieve.</param>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object in the object store.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetObject(System.String,System.Object[],System.Boolean)">
      <summary>Retrieves the specified data object from the object store.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> representing the data object to retrieve.</returns>
      <param name="typeName">The data source–specific type name of the data object to retrieve.</param>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object in the object store.</param>
      <param name="refresh">A Boolean value indicating whether to update the list of required restrictions and properties for the specified type.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetObject(System.String,System.Object[],System.String[])">
      <summary>Retrieves the specified data object from the object store.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> representing the data object to retrieve.</returns>
      <param name="typeName">The data source–specific type name of the data object to retrieve.</param>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object in the object store.</param>
      <param name="properties">Specifies the requested property values of the data object. The current version of DDEX does not support properties.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetObject(System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Retrieves the specified data object from the object store.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObject" /> representing the data object to retrieve.</returns>
      <param name="typeName">The data source–specific type name of the data object to retrieve.</param>
      <param name="identifier">An array containing the identifier parts that uniquely identify the data object in the object store.</param>
      <param name="properties">Specifies the requested property values of the data object. The current version of DDEX does not support properties.</param>
      <param name="refresh">A Boolean value indicating whether to update the list of required restrictions and properties for the specified type.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetRequiredRestrictions(System.String)">
      <summary>Returns the restrictions that are required for selecting objects of the specified type from the object store.</summary>
      <returns>A list of string values representing the required restrictions.</returns>
      <param name="typeName">The data source–specific name of the type for which to retrieve the required restrictions.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.GetSupportedRestrictions(System.String)">
      <summary>Returns all the restrictions that are supported for selecting objects of the specified type from the object store.</summary>
      <returns>A list of string values representing the supported restrictions.</returns>
      <param name="typeName">The data source–specific name of the type for which to retrieve the supported restrictions.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.InvalidateObjects(System.String)">
      <summary>Invalidates the data objects corresponding to the specified type, forcing the data objects to be selected from the data source for future requests, as opposed to retrieving them from the object store cache.</summary>
      <param name="typeName">The data source–specific name of the type to invalidate.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.InvalidateObjects(System.String,System.Object[])">
      <summary>Invalidates the data objects corresponding to the specified type and restrictions, forcing the data objects to be selected from the data source for future requests, as opposed to retrieving them from the object store cache.</summary>
      <param name="typeName">The data source–specific name of the type to invalidate.</param>
      <param name="restrictions">An array containing the restrictions associated with the specified type to invalidate.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String)">
      <summary>Returns a collection of data objects for the specified type from the object store.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[])">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.Boolean)">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="refresh">A Boolean value indicating whether to update the list of required restrictions and properties for the specified type.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.String)">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions and filter.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="filter">A filter to further narrow down the selection of data objects when there is no one-to-one mapping between the mapped type and the data source–specific type. The format of the filter is identical to the format of the <see cref="T:System.Data.DataColumn" /> expression.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.String,System.String)">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions and filter, and sorted according to the specified ordering.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="filter">A filter to further narrow down the selection of data objects when there is no one-to-one mapping between the mapped type and the data source–specific type. The format of the filter is identical to the format of the <see cref="T:System.Data.DataColumn" /> expression.</param>
      <param name="ordering">A string of comma-delimited data objects representing the sort ordering of the returned data objects.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.String[])">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions and properties.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="properties">Specifies the requested property values of the data objects. The current version of DDEX does not support properties.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.String[],System.String)">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions, properties, and filter.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="properties">Specifies the requested property values of the data objects. The current version of DDEX does not support properties.</param>
      <param name="filter">A filter to further narrow down the selection of data objects when there is no one-to-one mapping between the mapped type and the data source–specific type. The format of the filter is identical to the format of the <see cref="T:System.Data.DataColumn" /> expression.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.String[],System.String,System.String)">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions, properties, and filter, and sorted according to the specified ordering.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="properties">Specifies the requested property values of the data objects. The current version of DDEX does not support properties.</param>
      <param name="filter">A filter to further narrow down the selection of data objects when there is no one-to-one mapping between the mapped type and the data source–specific type. The format of the filter is identical to the format of the <see cref="T:System.Data.DataColumn" /> expression.</param>
      <param name="ordering">A string of comma-delimited data objects representing the sort ordering of the returned data objects.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataObjectStore.SelectObjects(System.String,System.Object[],System.String[],System.String,System.String,System.Boolean)">
      <summary>Returns a collection of data objects for the specified type from the object store, filtered by the specified restrictions, properties, and filter, and sorted according to the specified ordering.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectCollection" /> containing the data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="properties">Specifies the property values of the requested data objects. The current version of DDEX does not support properties.</param>
      <param name="filter">A filter to further narrow down the selection of data objects when there is no one-to-one mapping between the mapped type and the data source–specific type. The format of the filter is identical to the format of the <see cref="T:System.Data.DataColumn" /> expression.</param>
      <param name="ordering">A string of comma-delimited data objects representing the sort ordering of the returned data objects.</param>
      <param name="refresh">A Boolean value indicating whether to update the list of required restrictions and properties for the specified type.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The required restriction is missing.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectSupportModel">
      <summary>Represents the model that describes data object support.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectSupportModel.MappedTypes">
      <summary>Gets a collection of name/value pairs containing the mapped type names and their corresponding mapped type objects from the object store.</summary>
      <returns>A collection of name/value pairs containing the mapped type names and their corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataMappedObjectType" /> objects from the object store.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectSupportModel.Types">
      <summary>Retrieves a collection of name/value pairs containing the data source–specific type names and their corresponding type objects from the object store.</summary>
      <returns>A collection of name/value pairs containing the data source–specific type names and their corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> objects from the object store.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType">
      <summary>Represents a data object support type that is data source specific.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectType.Identifier">
      <summary>Gets a list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> objects that identify the current type.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> objects that identify the current type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectType.Name">
      <summary>Gets the name of the current type.</summary>
      <returns>The name of the current type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectType.NameProperty">
      <summary>Gets the name property as part of the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> object.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> object containing the name property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectType.PreferredOrdering">
      <summary>Gets the preferred ordering associated with the current type.</summary>
      <returns>The preferred ordering associated with the current type as a string of comma-delimited data object values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectType.Properties">
      <summary>Gets a collection of name/value pairs representing the property names and their corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> objects.</summary>
      <returns>A collection of name/value pairs containing the property names and the corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectType.Services">
      <summary>Gets a list of services for the current type as a collection of name/value pairs containing the service names and the corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectService" /> objects.</summary>
      <returns>A list of services for the current type as a collection of name/value pairs containing the service names and the corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectService" /> objects.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember">
      <summary>Represents a member of a data object support type.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember.Name">
      <summary>Gets the name of the data object type.</summary>
      <returns>The name of the data object type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataObjectTypeMember.Type">
      <summary>Gets the type of the data object as a <see cref="T:System.Type" />.</summary>
      <returns>The type of the data object as a <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo">
      <summary>Encapsulates information that describes a command for a node in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo.CommandId">
      <summary>Gets a <see cref="T:System.ComponentModel.Design.CommandID" /> that uniquely identifies the command.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CommandID" /> that uniquely identifies the command.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo.CommandProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCommandProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> representing the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCommandProvider" /> support entity.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo.GetParameters">
      <summary>Gets the parameters associated with this command.</summary>
      <returns>An array containing the parameters associated with this command.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo">
      <summary>Encapsulates properties that are common among different types of nodes; specifically, the connection node (<see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewConnectionNodeInfo" />) and the static and selection nodes (<see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewNodeInfo" />).</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.BrowseObjectProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewBrowseObjectProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> representing the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewBrowseObjectProvider" /> support entity.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.Children">
      <summary>Gets the child nodes of the current node.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewMemberInfo" /> objects representing the child nodes of the current node.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.Commands">
      <summary>Gets the commands associated with the current node.</summary>
      <returns>The commands associated with the current node, as name/value pairs containing the command identifiers and their corresponding <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.CreateAutoBrowseObject">
      <summary>Gets a value indicating whether an AutoBrowseObject should be created. </summary>
      <returns>true if the AutoBrowseObject should be created; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.DefaultCommand">
      <summary>Gets the default command that is set for the current node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo" /> object as the default command.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.DropTargetProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDropTargetProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> as the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDropTargetProvider" /> support entity.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.NodeId">
      <summary>Gets a string containing the ID of the current node.</summary>
      <returns>A string containing the ID of the current node.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.Properties">
      <summary>Gets the properties of the current node.</summary>
      <returns>A list of properties of the current node as name/value pairs of property names and <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo" /> objects</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.TypeDisplayName">
      <summary>Gets the UI-specific display name.</summary>
      <returns>The UI-specific display name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo.UserContextProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> as the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider" /> support entity.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewConnectionNodeInfo">
      <summary>Encapsulates properties for a connection node in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewConnectionNodeInfo.InitialDisplayNames">
      <summary>Gets the initial display names of the connection node.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewDisplayNameInfo" /> objects representing the initial display names.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewConnectionNodeInfo.ObjectType">
      <summary>Gets the type of the data object represented in the current connection node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> object as the type of the data object represented in the current connection node.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewDisplayNameInfo">
      <summary>Encapsulates properties about the display name of a node in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewDisplayNameInfo.CaptionProviderType">
      <summary>Gets the type of the caption provider.</summary>
      <returns>A <see cref="T:System.Type" /> representing the type of the caption provider.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewDisplayNameInfo.DisplayNameExpression">
      <summary>Gets the expression that, when converted, represents the display name.</summary>
      <returns>A string containing the display name expression.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewDisplayNameInfo.WhenExpression">
      <summary>Gets the expression containing the conditions for converting the expression for the display name.</summary>
      <returns>A string containing the expression, which consists of the conditions for converting the expression for the display name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewIconInfo">
      <summary>Encapsulates properties of a node icon in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewIconInfo.Assembly">
      <summary>Gets the data provider's assembly object as an <see cref="T:System.Reflection.Assembly" />.</summary>
      <returns>The data provider's assembly object as an <see cref="T:System.Reflection.Assembly" />.</returns>
      <exception cref="T:System.FileLoadException">The assembly could not be loaded from the assembly name.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewIconInfo.IconName">
      <summary>Gets the name of the icon.</summary>
      <returns>A string value containing the name of the icon.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewIconInfo.IconProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> as the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider" /> support entity.</returns>
      <exception cref="T:System.TypeLoadException">The icon provider type could not be loaded from the icon provider type name.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewIconInfo.WhenExpression">
      <summary>Gets the expression that, when interpreted, determines the icon to display.</summary>
      <returns>The expression that, when interpreted, determines the icon to display.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo">
      <summary>Provides information about a data view.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo.ConnectionNode">
      <summary>Gets information about a connection node in the data view.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewConnectionNodeInfo" /> representing information about a connection node.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo.DisplayName">
      <summary>Gets the localizable display name of the data view.</summary>
      <returns>A string containing the localizable display name of the data view.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo.DragSourceProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> as the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider" /> support entity.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo.GlobalCommands">
      <summary>Gets the global commands that are available for the entire data view.</summary>
      <returns>Name/value pairs of <see cref="T:System.ComponentModel.Design.CommandID" /> objects representing the command identifiers and <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommandInfo" /> objects representing command information.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo.Name">
      <summary>Gets the programmatic name of the data view.</summary>
      <returns>A string value containing the programmatic name of the data view.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewMemberInfo">
      <summary>Represents information about a member of a data view that is associated with a data connection in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewMemberInfo.SkipWhenExpression">
      <summary>Gets the string value used when the when expression is skipped. This value replaces the value that would otherwise be computed by evaluating the when expression.</summary>
      <returns>A string value used instead of the when expression value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewNodeInfo">
      <summary>Encapsulates properties of a static or selection node in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewNodeInfo.DisplayNames">
      <summary>Gets the display names of the static node or the selection node.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewDisplayNameInfo" /> objects representing the display names.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewNodeInfo.Icons">
      <summary>Gets the icons associated with the static node or the selection node.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewIconInfo" /> objects representing the icons.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewNodeInfo.VisibilityProviderType">
      <summary>Gets the class as a <see cref="T:System.Type" /> that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewVisibilityProvider" /> support entity. The provider supplies this implementation.</summary>
      <returns>A <see cref="T:System.Type" /> as the class that implements the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewVisibilityProvider" /> support entity.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo">
      <summary>Represents information about a node property in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo.Category">
      <summary>Gets the category of the node property.</summary>
      <returns>A string value containing the category of the node property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo.Description">
      <summary>Gets the description of the node property.</summary>
      <returns>A string value containing the description of the node property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo.DisplayName">
      <summary>Gets the display name of the node property.</summary>
      <returns>A string value containing the display name of the node property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo.Name">
      <summary>Gets the node property name.</summary>
      <returns>A string value containing the node property name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo.StandardValues">
      <summary>Gets the values of the node property.</summary>
      <returns>Name/value pairs of value names and values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewPropertyInfo.Value">
      <summary>Gets the value of the node property.</summary>
      <returns>A string containing the value of the node property.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo">
      <summary>Encapsulates properties of a selection of nodes in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo.Filter">
      <summary>Gets a string of comma-delimited data object names representing the filter for the selection.</summary>
      <returns>A string of comma-delimited data object names representing the filter for the selection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo.Ordering">
      <summary>Gets the ordering of the selection as a string of comma-delimited data object names.</summary>
      <returns>The ordering of the selection as a string of comma-delimited data object names.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo.Properties">
      <summary>Gets the properties of the selection.</summary>
      <returns>A list of string values representing the property names of the selection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo.Restrictions">
      <summary>Gets the restrictions of the selection.</summary>
      <returns>A list of objects representing the restrictions of the selection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo.SelectionNode">
      <summary>Gets information about a selection node from the selection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionNodeInfo" /> containing information about a selection node from the selection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo.SelectionType">
      <summary>Gets the type of the data object representing in the selection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> object representing the type of the data object representing in the selection.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionNodeInfo">
      <summary>Encapsulates properties of a selection node in Server Explorer.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionNodeInfo.ObjectType">
      <summary>Gets the type of the data object represented in the selection node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataObjectType" /> representing the type of the selection node.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.IVsDataViewSupportModel">
      <summary>Represents the model that describes data view support.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSupportModel.DefaultView">
      <summary>Gets the default data view in Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo" /> object representing the default view.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.IVsDataViewSupportModel.Views">
      <summary>Gets all the available views for Server Explorer.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo" /> objects representing all the available views.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn">
      <summary>Represents a mapped object that describes a tabular object column.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.AdoDotNetDataType">
      <summary>Gets the ADO.NET data type as a numerical value from an ADO.NET–specific enumeration.</summary>
      <returns>A numerical value corresponding to the ADO.NET data type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.AdoDotNetDbType">
      <summary>Gets a value from the <see cref="T:System.Data.DbType" /> enumeration that specifies the data type of the column for an ADO.NET data provider.</summary>
      <returns>An integer value corresponding to a field from the <see cref="T:System.Data.DbType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.FrameworkDataType">
      <summary>Gets the .NET Framework type of the column.</summary>
      <returns>A <see cref="T:System.Type" /> as the .NET Framework type of the column.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.IsNullable">
      <summary>Gets a value indicating whether the column is nullable.</summary>
      <returns>true if this column is nullable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.Length">
      <summary>Gets the length of the column.</summary>
      <returns>An integer value representing the length of the column.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.NativeDataType">
      <summary>Gets the data source–specific data type name.</summary>
      <returns>A string value containing the data source–specific data type name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.Ordinal">
      <summary>Gets the ordinal number of the column, which specifies the order of the column in the columns collection.</summary>
      <returns>An integer value specifying the ordinal number of the column.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.Precision">
      <summary>Gets the maximum number of digits stored in the column.</summary>
      <returns>An integer value representing the maximum number of digits stored in the column.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.Scale">
      <summary>Gets the maximum number of digits to the right of the decimal point.</summary>
      <returns>An integer value representing the maximum number of digits to the right of the decimal point.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn.UserDataType">
      <summary>Gets a user-defined data type.</summary>
      <returns>A string value containing a user-defined data type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataExecutableObject">
      <summary>Represents a mapped object that executes code using zero or more parameters.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataExecutableObject.Catalog">
      <summary>Gets the catalog associated with this executable data object.</summary>
      <returns>A string value containing the catalog.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataExecutableObject.IsSystemObject">
      <summary>Gets a value indicating whether this executable data object is a system object.</summary>
      <returns>true if this executable data object is a system object; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataExecutableObject.Parameters">
      <summary>Gets the parameters of this executable data object.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter" /> objects representing the parameters.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataExecutableObject.Schema">
      <summary>Gets the schema of this executable data object.</summary>
      <returns>A string value containing the schema.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter">
      <summary>Represents a mapped object that describes an executable object parameter.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.AdoDotNetDataType">
      <summary>Gets the ADO.NET data type as a numerical value from the <see cref="T:System.Data.Common.DbMetaDataCollectionNames" /> metadata collection.</summary>
      <returns>A numerical value corresponding to the ADO.NET data type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.AdoDotNetDbType">
      <summary>Gets a value from the <see cref="T:System.Data.DbType" /> enumeration that specifies the data type of the parameter for an ADO.NET data provider.</summary>
      <returns>An integer value corresponding to a field from the <see cref="T:System.Data.DbType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.Direction">
      <summary>Gets the direction of the parameter.</summary>
      <returns>A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection" /> enumeration specifying the direction of the parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.FrameworkDataType">
      <summary>Gets the .NET Framework type of the parameter.</summary>
      <returns>A <see cref="T:System.Type" /> as the .NET Framework type of this parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.IsNullable">
      <summary>Gets a value indicating whether the parameter is nullable.</summary>
      <returns>true if the parameter is nullable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.Length">
      <summary>Gets the length of the parameter.</summary>
      <returns>An integer value representing the length of the parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.NativeDataType">
      <summary>Gets the data source–specific data type name.</summary>
      <returns>A string value containing the data source–specific data type name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.Ordinal">
      <summary>Gets the ordinal number of the parameter specifying the order of the parameter in the parameters collection.</summary>
      <returns>An integer value specifying the ordinal number of the parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.Precision">
      <summary>Gets the maximum number of digits stored in this parameter.</summary>
      <returns>An integer value representing the maximum number of digits stored in this parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.Scale">
      <summary>Gets the maximum number of digits to the right of the decimal point.</summary>
      <returns>An integer value representing the maximum number of digits to the right of the decimal point.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataParameter.UserDataType">
      <summary>Gets a user-defined data type.</summary>
      <returns>A string value containing a user-defined data type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataScalarFunction">
      <summary>Represents a mapped object that executes code using zero or more input parameters and returns a scalar value (represented here as a parameter).</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataScalarFunction.ReturnValue">
      <summary>Gets the value that the scalar function object returns after execution.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> representing the return value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataStoredProcedure">
      <summary>Represents a mapped object that executes code using zero or more input or output parameters and may also return data in a tabular form.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataStoredProcedure.ReturnValue">
      <summary>Gets the value that the stored procedure object returns after execution.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> representing the return value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTable">
      <summary>Represents a mapped object that contains raw tabular data.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTable.Columns">
      <summary>Gets the list of columns that the table object contains.</summary>
      <returns>A list of <see cref="T:crosoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableColumn" /> objects representing the columns contained in the table object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTable.ForeignKeys">
      <summary>Gets a list of foreign keys associated with the table object.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey" /> objects representing the foreign keys associated with the table object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTable.UniqueKeys">
      <summary>Gets a list of unique keys associated with the table object.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey" /> objects representing the unique keys associated with the table object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableColumn">
      <summary>Represents a mapped object that describes a tabular object column.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableColumn.DefaultValue">
      <summary>Gets the default value assigned to this column object, if any.</summary>
      <returns>The default value assigned to this column, if any, or null if no default value exists.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableColumn.IsComputed">
      <summary>Gets a value indicating whether this column object is computed.</summary>
      <returns>true if this column object is computed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey">
      <summary>Represents a mapped object that describes a set of columns defined by a table that together uniquely identify a row in another table.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey.Columns">
      <summary>Gets a list of foreign key table columns that collectively represent the foreign key.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKeyColumn" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey.DeleteAction">
      <summary>The delete action for records related through this foreign key.</summary>
      <returns>The delete action.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey.ReferencedTable">
      <summary>The data table referenced in this foreign key.</summary>
      <returns>The referenced table.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey.ReferencedUniqueKey">
      <summary>The unique key on the table referenced by this foreign key.</summary>
      <returns>The unique key.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey.UpdateAction">
      <summary>The update action for this foreign key.</summary>
      <returns>The update action.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKeyColumn">
      <summary>Represents a mapped object that describes a table foreign key column.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKeyColumn.ReferencedColumn">
      <summary>Gets the table column that the foreign key column references in the referenced table.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableColumn" /> object representing the column that the foreign key column references in the referenced table.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableUniqueKey">
      <summary>Represents a mapped object that describes a set of columns defined by a table that together uniquely identify a row in the table.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableUniqueKey.Columns">
      <summary>Gets all the columns that make up this unique key.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableColumn" /> objects representing all the columns that make up this unique key.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableUniqueKey.IsPrimary">
      <summary>Gets a value indicating whether this unique key is a primary key.</summary>
      <returns>true if this unique key is a primary key; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTabularFunction">
      <summary>Represents a mapped object that executes code using zero or more input parameters and returns data in a tabular form.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTabularObject">
      <summary>Represents a mapped object that exposes data in a tabular form.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTabularObject.Catalog">
      <summary>Gets the catalog of the tabular object.</summary>
      <returns>A string representing the catalog.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTabularObject.Columns">
      <summary>Gets a list of data columns contained in the tabular object.</summary>
      <returns>A list of <see cref="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataColumn" /> objects representing the data columns contained in the tabular object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTabularObject.IsSystemObject">
      <summary>Gets a value indicating whether the tabular object is a system object.</summary>
      <returns>true if the tabular object is a system object; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTabularObject.Schema">
      <summary>Gets the schema of the most double-click tabular object.</summary>
      <returns>A string value containing the schema of the tabular object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataView">
      <summary>Represents a mapped object that dynamically generates tabular data based on data from other objects.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataAsyncCommandCompletedEventArgs`1">
      <summary>Encapsulates event data for various events used in the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand" /> service </summary>
      <typeparam name="T">The type of the parameter.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.DataAsyncCommandCompletedEventArgs`1.#ctor(System.Exception,System.Boolean,`0,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataAsyncCommandCompletedEventArgs`1" /> class with the specified parameters.</summary>
      <param name="error">The exception that occurred during the operation execution, if any.</param>
      <param name="cancelled">A Boolean value indicating whether the operation was cancelled.</param>
      <param name="returnValue">The return value of the executed operation.</param>
      <param name="userState">A unique identifier for the asynchronous process.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.DataAsyncCommandCompletedEventArgs`1.ReturnValue">
      <summary>Returns the return value of the operation.</summary>
      <returns>The return value of the operation of the generic type T.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType">
      <summary>Represents an enumeration of predefined data command types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Text">
      <summary>The command is a text command.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Prepared">
      <summary>The command is prepared and is the return value of the <see cref="M:Microsoft.VisualStudio.Data.Framework.DataCommand.Prepare(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[])" /> method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Table">
      <summary>The command holds the name of a table.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Procedure">
      <summary>The command holds the name of a stored procedure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.ScalarFunction">
      <summary>The command holds the name of a scalar function.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.TabularFunction">
      <summary>The command holds the name of a tabular function.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat">
      <summary>Specifies the format of a data item type returned by the <see cref="M:Microsoft.VisualStudio.Data.Framework.DataReader.GetItemType(System.Int32,Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat)" /> method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat.Default">
      <summary>The item type format is the type set as the default.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat.NativeType">
      <summary>The item type format is a string representing the native type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat.ManagedType">
      <summary>The item type format is an instance of <see cref="T:System." /><see cref="Type" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection">
      <summary>Specifies the type of a parameter within a query.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection.Unknown">
      <summary>The parameter direction is not defined.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection.In">
      <summary>The parameter is an input parameter.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection.Out">
      <summary>The parameter is an output parameter.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection.InOut">
      <summary>The parameter is capable of both input and output.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection.ReturnValue">
      <summary>The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataViewNodeEventArgs">
      <summary>Encapsulates event data for various events that are raised for nodes in Server Explorer when some of their properties change.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.DataViewNodeEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataViewNodeEventArgs" /> class with the item ID.</summary>
      <param name="itemId">A numerical value that uniquely identifies the node in the data view.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.DataViewNodeEventArgs.ItemId">
      <summary>Gets the item ID.</summary>
      <returns>An integer representing the item ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IDSRefBuilder">
      <summary>Allows you to create a Data Source Reference (DSRef) object that identifies one or more data objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IDSRefBuilder.AppendToDSRef(System.Object,System.String,System.Object[])">
      <summary>When implemented by a class, appends information about a data object with the specified type and identifier to a specified existing DSRef object.</summary>
      <param name="dsRef">The existing DSRef object to which information is appended.</param>
      <param name="typeName">The name of the object type.</param>
      <param name="identifier">The identifier of the object represented as an array of identifier parts.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand">
      <summary>Represents the interface that contains methods for executing data commands in an asynchronous manner.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.CancelAsync(System.Object)">
      <summary>When implemented by a class, cancels the asynchronous call, returning immediately.</summary>
      <param name="userState">A unique operation ID for the operation to cancel. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.DeriveParametersAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,System.Int32,System.Object)">
      <summary>When implemented by a class, derives, in an asynchronous manner, a set of parameters for use with a specified command.</summary>
      <param name="command">Command for which the parameters are derived.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="commandTimeout">Amount of time, in seconds, before which the command times out.</param>
      <param name="userState">The object on which this method calls back as the command progresses.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.DeriveParametersCompleted">
      <summary>Occurs when the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.DeriveParametersAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,System.Int32,System.Object)" /> command is completed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.DeriveSchemaAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)">
      <summary>When implemented by a class, derives, in an asynchronous manner, the schema of the specified command.</summary>
      <param name="command">The command for which the schema is derived.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">A list of parameters to pass with the command.</param>
      <param name="commandTimeout">Amount of time, in seconds, before which the command times out.</param>
      <param name="userState">The object on which this method calls back as the command progresses.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.DeriveSchemaCompleted">
      <summary>Occurs when the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.DeriveSchemaAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)" /> command is completed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.ExecuteAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)">
      <summary>When implemented by a class, executes a command in an asynchronous manner.</summary>
      <param name="command">The command to be executed.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">A list of parameters to pass with the command.</param>
      <param name="commandTimeout">Amount of time, in seconds, before which the command times out.</param>
      <param name="userState">The object on which this method calls back as the command progresses.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.ExecuteCompleted">
      <summary>Occurs when the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.ExecuteAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)" /> command is completed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.ExecuteWithoutResultsAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)">
      <summary>Executes, in an asynchronous manner, a command that does not return any results beyond an integer value indicating status.</summary>
      <param name="command">The command to be executed.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">A list of parameters to pass with the command.</param>
      <param name="commandTimeout">Amount of time, in seconds, before which the command times out.</param>
      <param name="userState">The object on which this method calls back as the command progresses.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.ExecuteWithoutResultsCompleted">
      <summary>Occurs when the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.ExecuteWithoutResultsAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)" /> command is completed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.PrepareAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)">
      <summary>When implemented by a class, prepares, in an asynchronous manner, the specified command to be executed against the data source; the command can then be executed multiple times, with varying parameters.</summary>
      <param name="command">The command to be executed.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">A list of parameters to pass with the command.</param>
      <param name="commandTimeout">Amount of time, in seconds, before which the command times out.</param>
      <param name="userState">The object on which this method calls back as the command progresses.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.PrepareCompleted">
      <summary>Occurs when the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataAsyncCommand.PrepareAsync(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32,System.Object)" /> command is completed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand">
      <summary>Represents the interface that exposes methods for data command handling, including building and executing data commands of various types against data sources, retrieving read-only results, and retrieving a command status code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.CreateParameter">
      <summary>When implemented by a class, creates a parameter object that can be passed into one of the following methods: <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveSchema(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" />, <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" />, or <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" />.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> object instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveParameters(System.String)">
      <summary>When implemented by a class, derives the parameters that can be specified for a given command.</summary>
      <returns>An array of <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> objects. Each object represents a parameter that is derived from the command.</returns>
      <param name="command">A command from which to derive parameters that are specific to a data source. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveParameters(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType)">
      <summary>When implemented by a class, derives the parameters that can be specified for a given command.</summary>
      <returns>An array of <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> objects. Each object represents a parameter that is derived from the command.</returns>
      <param name="command">A command from which to derive parameters that are specific to a data source. </param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveParameters(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,System.Int32)">
      <summary>When implemented by a class, derives the parameters that can be specified for a given command.</summary>
      <returns>An array of <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> objects. Each object represents a parameter that is derived from the command.</returns>
      <param name="command">A command from which to derive parameters that are specific to a data source. </param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="commandTimeout">The length of time, in seconds, to block the client before canceling the parameter derivation and returning to the caller. A value of 0 indicates infinite time-out; a value of -1 indicates a provider default.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveSchema(System.String)">
      <summary>When implemented by a class, derives the schema returned from a specified command. The schema indicates the layout of items and blocks in a data reader.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object. This object provides a forward-only, read-only data stream that describes the layout of items and blocks, that is, the schema, for the reader object returned upon executing the specified command.</returns>
      <param name="command">A command for which to derive the schema that is specific to a data source. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveSchema(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType)">
      <summary>When implemented by a class, derives the schema returned from a specified command. The schema indicates the layout of items and blocks in a data reader.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object. This object provides a forward-only, read-only data stream that describes the layout of items and blocks, that is, the schema, for the reader object returned upon executing the specified command.</returns>
      <param name="command">A command for which to derive the schema that is specific to a data source. </param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveSchema(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[])">
      <summary>When implemented by a class, derives the schema returned from a specified command. The schema indicates the layout of items and blocks in a data reader.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object. This object provides a forward-only, read-only data stream that describes the layout of items and blocks, that is, the schema, for the reader object returned upon executing the specified command.</returns>
      <param name="command">A command for which to derive the schema specific that is to a data source. </param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Framework.DataParameter" /> objects for the specified command type. While this is an input parameter, the DDEX provider is still able to set properties on individual out and return value parameters. However, these will not be populated when deriving schemas.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.DeriveSchema(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)">
      <summary>When implemented by a class, derives the schema returned from a specified command. The schema indicates the layout of items and blocks in a data reader.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object. This object provides a forward-only, read-only data stream that describes the layout of items and blocks, that is, the schema, for the reader object returned upon executing the specified command.</returns>
      <param name="command">A command for which to derive the schema that is specific to a data source. </param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Framework.DataParameter" /> objects for the specified command type. While this is an input parameter, the DDEX provider is still able to set properties on individual out and return value parameters. However, these will not be populated when deriving schemas.</param>
      <param name="commandTimeout">The length of time, in seconds, to block the client before canceling the schema derivation and returning to the caller. A value of 0 indicates infinite time-out; a value of -1 indicates a provider default.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String)">
      <summary>When implemented by a class, executes a specified command and returns read-only results.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object, which provides a forward-only, read-only stream from the data source.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType)">
      <summary>When implemented by a class, executes a specified command and returns read-only results.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object, which provides a forward-only, read-only stream from the data source.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[])">
      <summary>When implemented by a class, executes a specified command and returns read-only results.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object, which provides a forward-only, read-only stream from the data source.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Framework.DataParameter" /> objects for the specified command type. While this is an input parameter, the DDEX provider is still able to set properties on individual out and return value parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)">
      <summary>When implemented by a class, executes a specified command and returns read-only results.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object, which provides a forward-only, read-only stream from the data source.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Framework.DataParameter" /> objects for the specified command type. While this is an input parameter, the DDEX provider is still able to set properties on individual out and return value parameters.</param>
      <param name="commandTimeout">The length of time, in seconds, to block the client before canceling the execution and returning to the caller. A value of 0 indicates infinite time-out; a value of -1 indicates a provider default.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String)">
      <summary>When implemented by a class, executes a command but does not request results, instead returning an integer indicating the outcome of the call.</summary>
      <returns>A DDEX provider–specific integer status code.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType)">
      <summary>When implemented by a class, executes a command but does not request results, instead returning an integer indicating the outcome of the call.</summary>
      <returns>A DDEX provider–specific integer status code.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[])">
      <summary>When implemented by a class, executes a command, optionally with parameters, but does not request results, instead returning an integer indicating the outcome of the call.</summary>
      <returns>A DDEX provider–specific integer status code.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Framework.DataParameter" /> objects for the specified command type. While this is an input parameter, the provider is still able to set properties on individual out and return value parameters. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)">
      <summary>When implemented by a class, executes a command, optionally with parameters, but does not request results, instead returning an integer indicating the outcome of the call.</summary>
      <returns>A DDEX provider–specific integer status code.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Framework.DataParameter" /> objects for the specified command type. While this is an input parameter, the provider is still able to set properties on individual out and return value parameters. </param>
      <param name="commandTimeout">The length of time, in seconds, to block the client before canceling the execution and returning to the caller. A value of 0 indicates infinite time-out; a value of -1 indicates a provider default.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Prepare(System.String)">
      <summary>When implemented by a class, prepares the specified command on the data source to be executed; the command may then be executed multiple times, with varying parameters.</summary>
      <returns>An identifier of the prepared command that you can later pass to the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> or <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> methods by using the command type <see cref="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Prepared" />.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Prepare(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType)">
      <summary>When implemented by a class, prepares the specified command on the data source to be executed; the command may then be executed multiple times, with varying parameters.</summary>
      <returns>An identifier of the prepared command that you can later pass to the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> or <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> methods by using the command type <see cref="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Prepared" />.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Prepare(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[])">
      <summary>When implemented by a class, prepares the specified command on the data source to be executed; the command may then be executed multiple times, with varying parameters.</summary>
      <returns>An identifier of the prepared command that you can later pass to the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> or <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> methods by using the command type <see cref="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Prepared" />.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> objects representing the command parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Prepare(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)">
      <summary>When implemented by a class, prepares the specified command on the data source to be executed; the command may then be executed multiple times, with varying parameters.</summary>
      <returns>An identifier of the prepared command that you can later pass to the <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.Execute(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> or <see cref="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataCommand.ExecuteWithoutResults(System.String,Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType,Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter[],System.Int32)" /> methods by using the command type <see cref="F:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType.Prepared" />.</returns>
      <param name="command">A command to execute that is specific to a data source.</param>
      <param name="commandType">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataCommandType" /> enumeration representing the command type for the indicated command, specifying how to interpret the contents of the <paramref name="command" /> parameter.</param>
      <param name="parameters">An array of <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter" /> objects representing the command parameters.</param>
      <param name="commandTimeout">The length of time, in seconds, to block the client before canceling the execution and returning to the caller. A value of 0 indicates infinite time-out; a value of -1 indicates a provider default.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionEquivalencyComparer">
      <summary>Provides the ability to compare data connection strings for equivalence.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionEquivalencyComparer.AreEquivalent(System.String,System.String)">
      <summary>Compares the specified connection strings to determine whether they are equivalent and hence provide the same design-time experience.</summary>
      <returns>true if the connection strings are equivalent; otherwise, false.</returns>
      <param name="connectionString1">The first connection string to compare.</param>
      <param name="connectionString2">The second connection string to compare.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString1" /> or the <paramref name="connectionString2" /> parameter is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionPromptDialog">
      <summary>Represents the interface for a dialog box that can prompt the user for information when a data connection is being opened.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionPromptDialog.ShowDialog(Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport)">
      <summary>When implemented by a class, displays the prompt dialog box, given a specific <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport" /> instance.</summary>
      <returns>A string that is the new value of the connection string containing the completed information that was entered by the user.</returns>
      <param name="connectionSupport">An instance of the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport" /> class that contains an existing, incomplete connection string that should be updated by this dialog box.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties">
      <summary>Represents the interface that exposes methods and properties for the parsing and formatting of connection strings, as well as for storage of strongly typed properties, custom attributes, and synonyms.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties.Add(System.String,System.Type,System.Object)">
      <summary>When implemented by a class, adds a new property to the current connection properties collection.</summary>
      <param name="key">Name of the property being added.</param>
      <param name="type">A <see cref="T:System.Type" /> object representing the type of the property.</param>
      <param name="value">Value of the property being added.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties.Parse(System.String)">
      <summary>When implemented by a class, disassembles the components of a connection string into a set of properties in the current <see cref="T:Microsoft.VisualStudio.Data.Framework.DataConnectionProperties" /> instance.</summary>
      <param name="connectionString">A connection string in a format recognized by the current <see cref="T:Microsoft.VisualStudio.Data.Framework.DataConnectionProperties" /> instance.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties.Reset">
      <summary>When implemented by a class, resets the values of connection properties to an initial state.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties.Reset(System.String)">
      <summary>When implemented by a class, removes the specified property from the current set of data connection properties.</summary>
      <returns>true if the property is removed; false if the property is not found.</returns>
      <param name="key">The name of the property key for the property to be reset.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties.ToSafeString">
      <summary>When implemented by a class, retrieves a string representation of the current set of data connection properties that excludes sensitive properties or properties that should not be persisted.</summary>
      <returns>A string representation of the current set of data connection properties that excludes sensitive properties or properties that should not be persisted.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionProperties.ToString">
      <summary>When implemented by a class, retrieves the default string representation of the current connection properties.</summary>
      <returns>A default string representation of the current connection properties.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport">
      <summary>Represents the interface that exposes methods and properties that enable you to work directly with connections to a data source.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.Close">
      <summary>When implemented by a class, closes the specified connection.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.ConnectionString">
      <summary>When implemented by a class, gets or sets a string representation of information required to establish a specified data source connection.</summary>
      <returns>A string representation of the data source connection information.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.ConnectionTimeout">
      <summary>When implemented by a class, gets or sets the amount of time to wait when establishing a connection before terminating the attempt and generating a time-out error.</summary>
      <returns>An integer representation of the allowable time-out period.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.Initialize(System.Object)">
      <summary>When implemented by a class, initializes the specified connection, optionally from an existing data provider object.</summary>
      <param name="providerObj">An existing DDEX provider object, or null if a new object needs to be created.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.Open(System.Boolean)">
      <summary>When implemented by a class, opens the specified data connection.</summary>
      <returns>true if the connection was opened successfully and does not require a prompt; false if the connection is missing required connection information and a prompt should be displayed to obtain the missing information form the user. You should return false only when a provider has implemented the <see cref="T:Microsoft.VisualStudio.Data.Framework.DataConnectionPromptDialog" /> class.</returns>
      <param name="doPromptCheck">Indicates whether the call to this method should return false for specific errors that relate to missing connection information, as opposed to simply throwing an error in all cases of failure. Data providers that do not implement a prompt dialog box (or have their own prompting mechanism) should ignore this parameter and always assume a value of false.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.ProviderObject">
      <summary>When implemented by a class, gets the underlying provider object for the specified connection.</summary>
      <returns>The underlying provider object for the specified connection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionSupport.State">
      <summary>When implemented by a class, gets the state of the data connection.</summary>
      <returns>The state of the data connection, based on the <see cref="T:Microsoft.VisualStudio.Data.Services.DataConnectionState" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIConnector">
      <summary>Provides the ability to customize the behavior of opening a connection when in the context of a connection UI (for example, the data connection dialog box).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIConnector.Connect(Microsoft.VisualStudio.Data.Services.IVsDataConnection)">
      <summary>When implemented by a class, opens the data connection in the context of a connection UI (for example, the data connection dialog box).</summary>
      <param name="connection">A data connection object representing the connection to the data source.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection" /> parameter is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIControl">
      <summary>Represents the interface that exposes methods and properties that enable a custom user interface (UI) control for editing connection properties in the Data Connection dialog box.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIControl.Control">
      <summary>When implemented by a class, gets the current user control as a <see cref="T:System.Windows.Forms.UserControl" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Forms.UserControl" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIControl.LoadProperties">
      <summary>When implemented by a class, loads the properties of controls in the Data Connection dialog box, such as the data source, user ID, password, and initial catalog.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties">
      <summary>Provides the ability to manipulate data connection properties in the context of a connection UI (for example, the data connection dialog box).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties.GetSynonyms(System.String)">
      <summary>When implemented by a class, retrieves an array list of synonyms for a specified property.</summary>
      <returns>An array of synonyms for a specified property.</returns>
      <param name="key">The name of a property for which to retrieve the list of synonyms.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties.IsComplete">
      <summary>When implemented by a class, gets a value indicating whether a given connection string is complete.</summary>
      <returns>true if the connection string is complete; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties.IsExtensible">
      <summary>When implemented by a class, gets or sets a Boolean value indicating whether the DDEX provider connection properties are extensible.</summary>
      <returns>true if the connection properties are extensible; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties.IsSensitive(System.String)">
      <summary>When implemented by a class, indicates whether a property contains sensitive information.</summary>
      <returns>true if the property contains sensitive information; otherwise, false.</returns>
      <param name="key">The name of the property to examine for sensitive information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties.ToDisplayString">
      <summary>When implemented by a class, retrieves a string representation of the current set of data connection properties that is suitable for on-screen display.</summary>
      <returns>A string representation of the current set of data connection properties that is suitable for on-screen display.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUITester">
      <summary>Provides the ability to test the connection with the properties specified in the connection dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUITester.Test(Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataConnectionUIProperties)">
      <summary>Tests the connection based on the properties specified in the connection dialog box.</summary>
      <param name="connectionUIProperties">Contains the connection properties specified in the data connection dialog box.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataMappedObjectConverter">
      <summary>Provides the ability to convert restrictions passed to the mapped object selector into underlying restrictions to pass to the data source–specific type selector, thus allowing mapped selection. Also allows conversion of members of an underlying data object to members of a mapped object, resulting in mapped representations of data objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataMappedObjectConverter.ConvertToMappedMember(System.String,System.String,System.Object[])">
      <summary>When implemented by a class, converts the specified member of an underlying data object to its corresponding mapped member.</summary>
      <returns>The value of the mapped member converted from the underlying values.</returns>
      <param name="typeName">The name of the underlying type.</param>
      <param name="mappedMemberName">The name of the mapped member to convert to that belongs to the mapped type.</param>
      <param name="underlyingValues">An array containing the values stored for the data source–specific members that are to be converted to a mapped member value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataMappedObjectConverter.ConvertToUnderlyingRestriction(System.String,System.Int32,System.Object[])">
      <summary>When implemented by a class, converts the specified mapped restrictions into underlying restrictions that are data source–specific.</summary>
      <returns>The underlying restriction that is converted from the mapped restriction.</returns>
      <param name="mappedTypeName">The name of the mapped type.</param>
      <param name="substitutionValueIndex">Index into the array of substitution values.</param>
      <param name="mappedRestrictions">An array containing the mapped restrictions.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierConverter">
      <summary>Represents the interface that exposes methods for converting data source–specific object identifiers from strings to identifier parts, and from identifier parts to strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierConverter.ConvertToArray(System.String,System.String)">
      <summary>When implemented by a class, converts a formatted string identifier into its equivalent set of identifier parts.</summary>
      <returns>An array containing the separated, unformatted identifier parts as derived from the input identifier.</returns>
      <param name="typeName">The name of a data object type.</param>
      <param name="identifier">A data source object identifier.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierConverter.ConvertToString(System.String,System.Object[])">
      <summary>When implemented by a class, converts a set of identifier parts into a formatted string identifier.</summary>
      <returns>A string representation made up from the identifier parts and formatted based on the default formatting option.</returns>
      <param name="typeName">The name of a data object type.</param>
      <param name="identifier">An array containing a set of identifier parts for a specified object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierConverter.ConvertToString(System.String,System.Object[],Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat)">
      <summary>When implemented by a class, converts a set of identifier parts into a formatted string identifier, based on the specified formatting option.</summary>
      <returns>A string representation made up from the identifier parts and formatted based on the specified formatting option.</returns>
      <param name="typeName">The name of a data object type.</param>
      <param name="identifier">An array containing a set of identifier parts for a specified object.</param>
      <param name="format">A value from the enumeration <see cref="T:Microsoft.VisualStudio.Data.Services.DataObjectIdentifierFormat" />  indicating the format of the string.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierResolver">
      <summary>Represents the interface that exposes methods for expanding and contracting an identifier for a specified data object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierResolver.ContractIdentifier(System.String,System.Object[])">
      <summary>When implemented by a class, contracts an identifier for a data object with the specified type and complete identifier.</summary>
      <returns>The partial, contracted unique identifier for a data object.</returns>
      <param name="typeName">The name of a type of data object.</param>
      <param name="fullIdentifier">A full identifier of a data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectIdentifierResolver.ExpandIdentifier(System.String,System.Object[])">
      <summary>When implemented by a class, expands an identifier for a data object with the specified type and partial identifier.</summary>
      <returns>The complete, expanded identifier of the data object that matches the partial identifier passed in, or null if the identifier could not be expanded.</returns>
      <param name="typeName">The name of a type of data object.</param>
      <param name="partialIdentifier">A partial identifier of a data object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectMemberComparer">
      <summary>Represents the interface that exposes methods for comparing two data object identifier parts or properties.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectMemberComparer.Compare(System.String,System.Object[],System.Int32,System.Object)">
      <summary>When implemented by a class, compares one object identifier part with another specified object identifier part.</summary>
      <returns>A value less than zero in cases where the identifier part is less than the specified value; zero if the identifier part is equal to the specified value; a value greater than zero if the identifier part is greater than the specified value.</returns>
      <param name="typeName">The name of the identifier type.</param>
      <param name="identifier">An array of identifier parts that identify the data object.</param>
      <param name="identifierPart">The zero-based index into the identifier array indicating which part of the identifier to compare.</param>
      <param name="value">A value to compare the identifier part against.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectMemberComparer.Compare(System.String,System.String,System.Object,System.Object)">
      <summary>When implemented by a class, compares a property of a data object with another data object property.</summary>
      <returns>A value less than zero if the identifier part is less than the specified value; zero if the identifier part is equal to the specified value; a value greater than zero if the identifier part is greater than the specified value.</returns>
      <param name="typeName">The name of an object type.</param>
      <param name="propertyName">The name of a property to compare.</param>
      <param name="value1">The first value to compare.</param>
      <param name="value2">The second value to compare.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector">
      <summary>Enables getting data source–specific metadata about objects from the object store. The source of the object store is the data object support XML file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector.GetExpensiveProperties(System.String)">
      <summary>When implemented by a class, retrieves a list of expensive properties from the object store.</summary>
      <returns>A list of expensive properties for the specified type.</returns>
      <param name="typeName">The data source–specific type name for which to retrieve expensive properties.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector.GetOrdering(System.String)">
      <summary>When implemented by a class, returns the ordering for the specified type as a string of comma-delimited data object names, which specifies the sort order of the data objects returned when selecting objects.</summary>
      <returns>A string of comma-delimited data object names, which specifies the sort order of the data objects returned when selecting objects for the specified type.</returns>
      <param name="typeName">The data source–specific type name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector.GetRequiredRestrictions(System.String)">
      <summary>When implemented by a class, retrieves a list of the restrictions that are required when selecting data objects for the specified type.</summary>
      <returns>A list of the restrictions that are required when retrieving data objects for the current type.</returns>
      <param name="typeName">The data source–specific type name for which to get the required restrictions.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector.GetSupportedRestrictions(System.String)">
      <summary>When implemented by a class, retrieves all the restrictions that are supported when selecting data objects for the specified type.</summary>
      <returns>A list of the restrictions that are supported when retrieving data objects for the specified type.</returns>
      <param name="typeName">The data source–specific type name for which to get the supported restrictions.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSelector.SelectObjects(System.String,System.Object[],System.String[])">
      <summary>When implemented by a class, returns a data reader for the data objects retrieved from the object store, which are filtered by the specified restrictions and properties.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> object representing a data reader for the selected data objects.</returns>
      <param name="typeName">The data source–specific name of the specified type to retrieve data objects for.</param>
      <param name="restrictions">The restrictions for filtering the data objects returned.</param>
      <param name="properties">Specifies the property values of the requested data objects. The current version of DDEX does not support properties.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataObjectSupport">
      <summary>Provides the ability to retrieve, through an XML stream, a description of data object types for a data source. You can then interpret and manipulate this information programmatically.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter">
      <summary>Represents the interface that exposes methods and properties to handle data parameters.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Descriptor">
      <summary>When implemented by a class, gets information that describes the data parameter.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameterDescriptor" /> object describing the data parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Direction">
      <summary>When implemented by a class, gets or sets a <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection" /> object specifying the direction of the parameter.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataParameterDirection" /> object specifying the direction of the parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Name">
      <summary>When implemented by a class, gets or sets the string literal name of the current parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Parse(System.String)">
      <summary>When implemented by a class, disassembles a parameter value in a string format and converts the value to the correct type.</summary>
      <param name="value">A string representation of a parameter value.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Size">
      <summary>When implemented by a class, gets or sets an integer value specifying the size of the parameter.</summary>
      <returns>The size of the parameter as an integer value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.ToString">
      <summary>When implemented by a class, retrieves a string representation of the value of the current parameter.</summary>
      <returns>A string representation of the value of the current parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Type">
      <summary>When implemented by a class, gets or sets the data source–specific type of the parameter.</summary>
      <returns>The data source–specific type of the parameter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameter.Value">
      <summary>When implemented by a class, gets or sets the value of the parameter.</summary>
      <returns>The value of the data parameter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameterDescriptor">
      <summary>Exposes properties that describe a data parameter.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameterDescriptor.IsDerived">
      <summary>Gets a value indicating whether this data parameter is derived from a command.</summary>
      <returns>true if this data parameter is derived; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameterDescriptor.IsNullable">
      <summary>Gets a value indicating whether this data parameter can contain a null value.</summary>
      <returns>true if this data parameter can contain a null value; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataParameterDescriptor.IsOptional">
      <summary>Gets a value indicating whether this data parameter is an optional parameter.</summary>
      <returns>true if this data parameter is an optional parameter; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader">
      <summary>Represents the interface that exposes methods and properties for reading data from any data source.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.Close">
      <summary>When implemented by a class, closes the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader" /> instance.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.Descriptor">
      <summary>When implemented by a class, gets information that describes the data from a data source.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor" /> object describing the data.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.GetBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>When implemented by a class, retrieves a specified number of bytes of raw binary data.</summary>
      <returns>An integer value indicating the number of bytes read into the buffer.</returns>
      <param name="index">Index in the current block of data for the item to retrieve.</param>
      <param name="buffer">An array into which specified data, as byte array, should be placed. If null, this method returns the size required of the array in order to fit all of the specified data.</param>
      <param name="bufferIndex">Index of the starting point in the byte array specified with the <paramref name="buffer" /> parameter.</param>
      <param name="length">The number of bytes to be read into the byte array specified with the <paramref name="buffer" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.GetBytes(System.String,System.Byte[],System.Int32,System.Int32)">
      <summary>When implemented by a class, retrieves a specified number of bytes of raw binary data.</summary>
      <returns>An integer value indicating the number of bytes read into the buffer.</returns>
      <param name="name">The name of the item for which to retrieve raw binary data.</param>
      <param name="buffer">An array into which specified data, as byte array, should be placed. If null, this method returns the size required of the array in order to fit all of the specified data.</param>
      <param name="bufferIndex">Index of the starting point in the byte array specified with the <paramref name="buffer" /> parameter.</param>
      <param name="length">The number of bytes to be read into the byte array specified with the <paramref name="buffer" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.GetItem(System.Int32)">
      <summary>When implemented by a class, retrieves the value of the item at the specified index in the current block of data.</summary>
      <returns>An integer value from the specified index in the current block of data.</returns>
      <param name="index">Index in the current block of the data item at which to retrieve the integer value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.GetItem(System.String)">
      <summary>When implemented by a class, retrieves the value of a data item with the specified name in the current block of data.</summary>
      <returns>The string value of the item with the specified name.</returns>
      <param name="name">The name of the data item in the current block to retrieve.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.IsClosed">
      <summary>When implemented by a class, gets a Boolean value that indicates whether the specified reader is closed.</summary>
      <returns>true if the specified data reader is closed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.IsNullItem(System.Int32)">
      <summary>When implemented by a class, indicates whether the data item at the specified index is unspecified, that is, null.</summary>
      <returns>true if the item is null, that is, unspecified; otherwise, false.</returns>
      <param name="index">Index of the data item to examine.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.IsNullItem(System.String)">
      <summary>When implemented by a class, indicates whether the value of the given data item is unspecified, that is, null.</summary>
      <returns>true if the item is null, that is, unspecified; otherwise, false.</returns>
      <param name="name">The name of the data item to examine.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.NextResult">
      <summary>When implemented by a class, advances the data reader to the next result set, in cases where the reader contains multiple result sets.</summary>
      <returns>true if more result sets remain to be read and the reader was advanced to the next result set; false if no more result sets were found.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.Read">
      <summary>When implemented by a class, advances the reader to the next block of data, in cases where the reader contains more than one block of data.</summary>
      <returns>true if there are more blocks of data to read.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.Status">
      <summary>When implemented by a class, gets a numerical status code returned by the method currently providing data to the data reader.</summary>
      <returns>An integer value status code from the method currently providing data.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReader.Terminate">
      <summary>When implemented by a class, terminates the data reader immediately, without necessarily returning all of the data or setting output parameters.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor">
      <summary>Exposes properties that describe the data reader.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor.GetItemIndex(System.String)">
      <summary>Retrieves the index corresponding to the specified data item name for the current data reader.</summary>
      <returns>The index corresponding to the specified data item name for the current data reader, or null if the item is not found.</returns>
      <param name="name">The date item name for which to retrieve the index.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor.GetItemMaxLength(System.Int32)">
      <summary>Retrieves the maximum length, in characters, of data items at the specified index for the current data reader.</summary>
      <returns>The maximum length, in number of characters, of the data item at the specified index; or -1 if the maximum length is unavailable or is not sensible.</returns>
      <param name="index">The index of the data item being examined for length.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor.GetItemName(System.Int32)">
      <summary>Retrieves the name assigned to the data item at the specified index in this data reader.</summary>
      <returns>The name assigned to the data item at the index specified by the index parameter, or null if no name exists. </returns>
      <param name="index">The index of the data item for which to retrieve the name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor.GetItemType(System.Int32)">
      <summary>Retrieves the data type of a data item or data items at the specified index.</summary>
      <returns>The type of the data items located at the specified index. </returns>
      <param name="index">Index of the data item for which to return the data type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor.GetItemType(System.Int32,Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat)">
      <summary>Retrieves the data type of a data item or data items at the specified index, in a specified format.</summary>
      <returns>The type of the data items located at the specified index in the specified format.</returns>
      <param name="index">Index of the data item for which to return the data type.</param>
      <param name="itemTypeFormat">A value from the <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.DataItemTypeFormat" /> enumeration specifying the format of the data type to return.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataReaderDescriptor.ItemCount">
      <summary>Gets the number of items in this data reader's current block of data.</summary>
      <returns>An integer value holding the number of items in this data reader's current block of data. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataSourceInformation">
      <summary>Represents the interface that exposes methods and properties for retrieving properties about a specified data source passed as name/value pairs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataSourceInformation.Contains(System.String)">
      <summary>When implemented by a class, retrieves a Boolean value indicating whether a specified property is contained in this data source information instance.</summary>
      <returns>true if the specified property is contained in this data source information instance; otherwise, false.</returns>
      <param name="propertyName">The name of the property being tested.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataSourceInformation.Item(System.String)">
      <summary>When implemented by a class, retrieves a data source information property with the specified name.</summary>
      <returns>The data source information property with the specified name.</returns>
      <param name="propertyName">The name of the data source information property to retrieve.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataSourceVersionComparer">
      <summary>Represents the interface that exposes the ability to compare two data source–specific version strings.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataTransaction">
      <summary>Represents the interface that exposes methods and properties for transaction processing, which allows you to commit or roll back a series of related operations as a batch.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataTransaction.BeginTransaction">
      <summary>When implemented by a class, initiates a transaction and returns the new transaction level.</summary>
      <returns>An integer value indicating the new transaction level.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataTransaction.CommitTransaction">
      <summary>When implemented by a class, commits a transaction and returns the new transaction level.</summary>
      <returns>An integer value indicating the new transaction level.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataTransaction.CurrentTransactionLevel">
      <summary>When implemented by a class, gets a numeric value indicating the current transaction level.</summary>
      <returns>An integer value specifying the current transaction level.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataTransaction.RollbackTransaction">
      <summary>When implemented by a class, rolls back, or voids, a transaction and returns the new transaction level.</summary>
      <returns>An integer value indicating the new transaction level.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewBrowseObjectProvider">
      <summary>Represents the interface that exposes the ability to retrieve a specialized browse object for a specified node in a given data view.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewBrowseObjectProvider.BrowseObjectChanged">
      <summary>Occurs when the browse object is changed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewBrowseObjectProvider.CreateBrowseObject(System.Int32,System.Object)">
      <summary>When implemented by a class, retrieves a special browse object for a data view node, given the specified node's item ID.</summary>
      <returns>An object representing the browse object for the specified node.</returns>
      <param name="itemId">An item ID specifying a node for which to create a custom browse object.</param>
      <param name="autoBrowseObj">A browse object automatically generated with information in the data view support XML, or null if the XML indicates that no such browse object should be generated. This allows an implementation of this method to specify most settings in XML and then provide only minor modification to the set of properties, rather than necessitating building the object from the beginning.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCaptionProvider">
      <summary>Provides the ability to get the caption of a node item in Server Explorer.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCaptionProvider.CaptionChanged">
      <summary>Occurs when a node's caption has changed in Server Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCaptionProvider.GetCaption(System.Int32)">
      <summary>Retrieves the caption of the specified node in Server Explorer.</summary>
      <returns>The caption of the specified item.</returns>
      <param name="itemId">A numerical identifier for the item to get the caption for.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCaptionProvider.GetEditableCaption(System.Int32)">
      <summary>Retrieves the caption, which can be edited, of the specified node in Server Explorer.</summary>
      <returns>The caption of the specified item.</returns>
      <param name="itemId">A numerical identifier for the item to get the caption for.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCommandProvider">
      <summary>Provides the ability to implement commands, specifically custom commands, for nodes in a data view.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCommandProvider.CreateCommand(System.Int32,System.ComponentModel.Design.CommandID)">
      <summary>Creates a menu command for a Server Explorer menu item.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> object representing a menu command item.</returns>
      <param name="itemId">The identifier of the item in the data view hierarchy on which this command should be invoked.</param>
      <param name="commandId">A <see cref="T:System.ComponentModel.Design.CommandID" /> object instance uniquely identifying the command associated with the specified item in the data view hierarchy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCommandProvider.CreateSelectionCommand(System.ComponentModel.Design.CommandID)">
      <summary>Creates a selection menu command for multiple nodes in Server Explorer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> object representing a menu command item, or null if no command was created.</returns>
      <param name="commandId">A <see cref="T:System.ComponentModel.Design.CommandID" /> object instance uniquely identifying the command associated with the specified item in the data view hierarchy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewCommandProvider.UpdateCommandStatus(System.ComponentModel.Design.MenuCommand)">
      <summary>Updates the status of the specified menu command.</summary>
      <param name="command">A <see cref="T:System.ComponentModel.Design.MenuCommand" /> object representing the command to update.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider">
      <summary>Provides the ability to open a document, get a document moniker, and perform other actions pertaining to a document in the Visual Studio Sever Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.CanOpen(System.Int32,System.Guid)">
      <summary>When implemented by a class, indicates whether a document can be opened for the specified node in the data view and for the given logical view.</summary>
      <returns>true if a document can be opened; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node.</param>
      <param name="logicalView">A unique identifier of a logical view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.FindNode(System.String,System.Boolean)">
      <summary>When implemented by a class, searches for a node in the data view that corresponds to the specified document moniker. Optionally, searches child nodes that have not been expanded yet.</summary>
      <returns>An integer value that identifies the specified node in the data view, or -1 if the node is not found.</returns>
      <param name="documentMoniker">A document moniker.</param>
      <param name="searchUnpopulatedChildren">Specifies whether to search child nodes that have not been expanded yet (true), or not (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.GetContext(System.Int32)">
      <summary>When implemented by a class, retrieves the service provider representing the context of the current document in the data view.</summary>
      <returns>An <see cref="T:System.IServiceProvider" /> object representing the context of the current document in the data view.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.GetMoniker(System.Int32)">
      <summary>When implemented by a class, retrieves the document moniker for the specified node in the data view.</summary>
      <returns>The document moniker.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.GetPriority(System.Int32)">
      <summary>When implemented by a class, gets the priority level of the specified document within the data view hierarchy.</summary>
      <returns>A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSDOCUMENTPRIORITY" /> enumeration specifying the priority level of the specified document within the data view hierarchy.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.GetSaveName(System.Int32)">
      <summary>When implemented by a class, gets the name of the specified document for use when saving a new document.</summary>
      <returns>A string representing the document name for use when saving the document, or null if there is no such name.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.IsSupported(System.Int32)">
      <summary>When implemented by a class, indicates whether a document is supported for the specified node in the data view.</summary>
      <returns>true if the document is supported; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.Open(System.Int32,System.Guid,System.Object,System.Boolean)">
      <summary>When implemented by a class, opens the specified document in the given logical view. The document may be populated with existing data and may be hidden.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> object representing the open document window.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
      <param name="logicalView">A unique identifier of a logical view.</param>
      <param name="existingDocumentData">Any existing data to be included in the document.</param>
      <param name="doNotShowWindow">A Boolean value specifying whether to hide the document window (true) or not (false).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider.ShowMoniker(System.Int32)">
      <summary>When implemented by a class, indicates whether the document moniker is to be displayed on the specified document.</summary>
      <returns>true if the moniker is to be displayed; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider2">
      <summary>Provides the ability to check the state of or save the document in the Visual Studio Server Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider2.IsDirty(System.Int32,System.Object)">
      <summary>When implemented by a class, indicates whether the specified document has data that is modified and is not saved yet.</summary>
      <returns>true if the document has data that is modified and is not saved yet; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
      <param name="documentData">The data contained in the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDocumentProvider2.Save(System.Int32,System.Object,Microsoft.VisualStudio.Shell.Interop.VSSAVEFLAGS,System.String)">
      <summary>When implemented by a class, saves the specified document.</summary>
      <returns>true if the document was saved, false if the save operation failed.</returns>
      <param name="itemId">A numerical identifier for the node in the data view.</param>
      <param name="documentData">The data contained in the document.</param>
      <param name="saveFlags">A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVEFLAGS" /> enumeration specifying the type of save operation.</param>
      <param name="silentSaveAsName">A new document name for use when saving without prompting the user for a new name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider">
      <summary>Provides the ability to drag selected nodes in a data view hierarchy.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider.CreateDataObject">
      <summary>When implemented by a class, creates a data object that contains a copy of the dragged node and that will be stored in the Clipboard.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object containing a copy of the information to be transferred.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider.GetAllowedEffects(System.Windows.Forms.IDataObject)">
      <summary>When implemented by a class, retrieves the allowed drag-and-drop effects when a node is dragged in the data view, such as copying, moving, or linking.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DragDropEffects" /> object containing the allowed drag-and-drop effects, such as whether the data is copied, moved, or linked.</returns>
      <param name="dataObject">An <see cref="T:System.Windows.Forms.IDataObject" /> object containing a copy of the information to be transferred.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider.OnDropped(System.Windows.Forms.IDataObject,System.Windows.Forms.DragDropEffects)">
      <summary>When implemented by a class, handles the drop operation.</summary>
      <param name="dataObject">An <see cref="T:System.Windows.Forms.IDataObject" /> object containing a copy of the information to be transferred.</param>
      <param name="effect">A <see cref="T:System.Windows.Forms.DragDropEffects" /> object specifying the drag-and-drop effects, such as whether the data is copied, moved, or linked.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider.OnGiveFeedback(System.Windows.Forms.IDataObject,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>When implemented by a class, raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event.</summary>
      <param name="dataObject">A <see cref="T:System.Windows.Forms.IDataObject" /> object containing a copy of the information to be transferred.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> containing the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDragSourceProvider.OnQueryContinueDrag(System.Windows.Forms.IDataObject,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>When implemented by a class, raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</summary>
      <param name="dataObject">An <see cref="T:System.Windows.Forms.IDataObject" /> object containing a copy of the information to be transferred.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.QueryContinueEventArgs" /> containing the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDropTargetProvider">
      <summary>Represents the ability to drop data on nodes in a data view hierarchy.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDropTargetProvider.AllowDrop(System.Int32)">
      <summary>When implemented by a class, indicates whether the drop operation is allowed on the specified node.</summary>
      <returns>true if the drop operation is allowed; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node in the data view hierarchy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDropTargetProvider.OnDragDrop(System.Int32,System.Windows.Forms.DragEventArgs)">
      <summary>When implemented by a class, raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</summary>
      <param name="itemId">A numerical identifier for the node in the data view hierarchy.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> containing the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewDropTargetProvider.OnDragOver(System.Int32,System.Windows.Forms.DragEventArgs)">
      <summary>When implemented by a class, raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</summary>
      <param name="itemId">A numerical identifier for the node in the data view hierarchy.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> containing the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy">
      <summary>Represents the ability of a provider to manipulate a Server Explorer connection through its implementation as a data view hierarchy.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.CreateNewItem">
      <summary>Creates a new node in the data view hierarchy.</summary>
      <returns>The item ID of the newly created node.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.CreateNewItems(System.Int32)">
      <summary>Creates the specified number of new nodes in the data view hierarchy.</summary>
      <returns>An array containing the item IDs of the newly created nodes.</returns>
      <param name="count">The number of nodes to create.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="count" /> parameter is less than zero.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.CurrentView">
      <summary>Gets the current view of the data view hierarchy.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewInfo" /> object representing the current view.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.DelayInsertItem(System.String,Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo,System.Int32,System.Object[])">
      <summary>Adds the specified node to the queue of nodes to be inserted at a later time, if the parent node has not been expanded yet or is not created. Otherwise, inserts the specified node immediately.</summary>
      <returns>true if the new node is inserted immediately; false if the new node is placed in queue for delayed insert or is not inserted immediately.</returns>
      <param name="parentFullName">The full name of the new node's parent.</param>
      <param name="childSelectionInfo">The selection of child nodes to insert beneath the new node.</param>
      <param name="newItemId">A numerical identifier for the new node to insert.</param>
      <param name="identifier">An array containing identifier parts that represent the new node.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="parentFullName" /> or <paramref name="childSelectionInfo" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.DelayInsertItem(System.String,System.String,System.Int32,System.Object[])">
      <summary>Adds the specified node to the queue of nodes to be inserted at a later time, if the parent node has not been expanded yet or is not created. Otherwise, inserts the specified node immediately.</summary>
      <returns>true if the new node is inserted immediately; false if the new node is placed in queue for delayed insert or is not inserted immediately.</returns>
      <param name="parentFullName">The full name of the new node's parent.</param>
      <param name="typeName">The name of the new node's type.</param>
      <param name="newItemId">A numerical identifier for the new node to insert.</param>
      <param name="identifier">An array containing identifier parts that represent the new node.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="parentFullName" /> or <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.DiscardItem(System.Int32)">
      <summary>Removes the specified node from Server Explorer and de-allocates its corresponding object from memory.</summary>
      <returns>true if node is removed; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node to remove.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.ExplorerConnection">
      <summary>Gets the current connection to Server Explorer.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection" /> object representing the current connection to Server Explorer.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.GetOtherViewHierarchy(Microsoft.VisualStudio.Data.Services.IVsDataExplorerConnection)">
      <summary>Retrieves the data view hierarchy associated with the given Server Explorer connection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy" /> object representing the data view hierarchy for the given connection.</returns>
      <param name="explorerConnection">The explorer connection for which to get the data view hierarchy.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="explorerConnection" /> parameter is null.</exception>
      <exception cref="T:System.InvalidOperationException">The data provider associated with the <paramref name="explorerConnection" /> parameter differs from the current data provider.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.GetProviderImplementation``1(System.Type)">
      <summary>Creates an implementation of the generic type T from the specified type.</summary>
      <returns>The provider implementation type, or null if no implementation type is found.</returns>
      <param name="implementationType">A specific implementation type.</param>
      <typeparam name="T">The type of the parameter.</typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.GetViewCommonNodeInfo(System.Int32)">
      <summary>Returns the <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo" /> for the specified node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewCommonNodeInfo" /> object.</returns>
      <param name="itemId">A numerical identifier for the node.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="itemId" /> parameter is not valid.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.InsertItem(System.Int32,Microsoft.VisualStudio.Data.Services.IVsDataViewSelectionInfo,System.Int32,System.Object[])">
      <summary>Inserts the specified node and its child nodes, if any, under the specified parent node.</summary>
      <returns>true if the node was inserted; otherwise, false.</returns>
      <param name="parentItemId">The full name of the new node's parent.</param>
      <param name="childSelectionInfo">The selection of child nodes to insert beneath the new node.</param>
      <param name="newItemId">A numerical identifier for the new node to insert.</param>
      <param name="identifier">An array containing identifier parts that represent the new node.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="childSelectionInfo" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="childSelectionInfo" /> parameter is not a child of the specified parent node.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.InsertItem(System.Int32,System.String,System.Int32,System.Object[])">
      <summary>Inserts the specified node under the specified parent node.</summary>
      <returns>true if the node was inserted; otherwise, false.</returns>
      <param name="parentItemId">The full name of the new node's parent.</param>
      <param name="typeName">The name of the new node's type.</param>
      <param name="newItemId">A numerical identifier for the new node to insert.</param>
      <param name="identifier">An array containing identifier parts that represent the new node.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="typeName" /> parameter is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.IsConnectionInitialized">
      <summary>Gets a value indicating whether the connection to Server Explorer has been initialized.</summary>
      <returns>true if connection has been initialized; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.IsModelInitialized">
      <summary>Gets a value indicating whether the support model is initialized.</summary>
      <returns>true if the support model is initialized; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.IsViewSupportInitialized">
      <summary>Gets a value indicating whether the view support object is initialized.</summary>
      <returns>true if the view support is initialized; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.Model">
      <summary>Gets the existing support model object.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.IVsDataViewSupportModel" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.PersistentCommands">
      <summary>Gets a collection of name/value pairs of commands that are associated with the current Server Explorer connection and that are saved in the registry.</summary>
      <returns>A collection of name/value pairs representing the <see cref="T:System.ComponentModel.Design.CommandID" /> objects and the status corresponding to the saved commands.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.PersistentProperties">
      <summary>Gets a collection of name/value pairs of properties that are associated with the current Server Explorer connection and that are saved.</summary>
      <returns>A collection of name/value pairs representing the name of each property and its value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.RemoveItem(System.Int32)">
      <summary>Removes the specified node from Server Explorer and discards it.</summary>
      <returns>true if the node is removed; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.RemoveItem(System.Int32,System.Boolean)">
      <summary>Removes the specified node from Server Explorer. Optionally, discards the specified node.</summary>
      <returns>true if the node is removed; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the node to remove.</param>
      <param name="noDiscard">Specifies whether to discard the node (true) or not (false).</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.ServiceProvider">
      <summary>Gets the current data service provider.</summary>
      <returns>An <see cref="T:System.IServiceProvider" /> object representing the current data service provider.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.SetNewItemSaveName(System.Int32,System.String)">
      <summary>Sets the name for use when saving the specified node.</summary>
      <param name="itemId">A numerical identifier for the new node to remove.</param>
      <param name="saveName">The name for use when saving the specified node.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewHierarchy.ViewSupport">
      <summary>Gets the view support object associated with the current Server Explorer connection.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewSupport" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewIconProvider">
      <summary>Provides the ability to control the icons for nodes in a data view hierarchy.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewIconProvider.GetExpandedIcon(System.Int32)">
      <summary>When implemented by a class, retrieves the icon displayed when the specified node is expanded.</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object representing the node's icon.</returns>
      <param name="itemId">A numerical identifier of the node for which you want to get the icon.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewIconProvider.GetIcon(System.Int32)">
      <summary>When implemented by a class, retrieves the icon displayed in Server Explorer for the specified node.</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> object representing the node's icon.</returns>
      <param name="itemId">A numerical identifier of the node for which you want to get the icon.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewIconProvider.IconsChanged">
      <summary>Occurs when any icons have changed in the data view.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewSupport">
      <summary>Represents the interface that exposes the ability to retrieve an XML stream that provides a description of one or more data views.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewSupport.Close">
      <summary>When implemented by a class, closes the I/O stream to the data view resource.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewSupport.Initialize">
      <summary>When implemented by a class, initializes the data view hierarchy.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider">
      <summary>Provides the ability to create a user context to indicate which component of Server Explorer has just been selected.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider.CreateUserContext(System.Int32)">
      <summary>When implemented by a class, creates a user context object for the specified node.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUserContext" /> object for the specified node.</returns>
      <param name="itemId">A numerical identifier of the node in the data view hierarchy.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewUserContextProvider.UserContextChanged">
      <summary>Occurs when the user context changes.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewVisibilityProvider">
      <summary>Provides the ability to control the visibility of nodes in a data view hierarchy.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewVisibilityProvider.IsVisible(System.Int32)">
      <summary>When implemented by a class, indicates whether the current item is visible.</summary>
      <returns>true if item is visible; otherwise, false.</returns>
      <param name="itemId">A numerical identifier for the item in the data view hierarchy.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Data.Services.SupportEntities.IVsDataViewVisibilityProvider.VisibilityChanged">
      <summary>Occurs when the item's visibility changes.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE">
      <summary>Contains constants for all the types that a DSRef object can represent.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_NULL">
      <summary>Specifies a null value (0).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_COLLECTION">
      <summary>Specifies a collection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_MULTIPLE">
      <summary>Specifies a multiple DSRef object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_MIXED">
      <summary>Specifies the DSRef object supports mixed mode</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_DATASOURCEROOT">
      <summary>Specifies a data source root.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_FIELD">
      <summary>Specifies a data field.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_TABLE">
      <summary>Specifies a table.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_QUERY">
      <summary>Specifies a query.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_DATABASE">
      <summary>Specifies a database object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_TRIGGER">
      <summary>Specifies a trigger.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_STOREDPROCEDURE">
      <summary>Specifies a stored procedure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_EXTENDED">
      <summary>Specifies an extended type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_SCHEMADIAGRAM">
      <summary>The DSRef object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_VIEW">
      <summary>The DSRef object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_SYNONYM">
      <summary>Specifies a synonym.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_FUNCTION">
      <summary>Specifies a database function.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_PACKAGE">
      <summary>Specifies a package.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_PACKAGEBODY">
      <summary>Specifies a package body.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_RELATIONSHIP">
      <summary>Specifies a database relationship object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_INDEX">
      <summary>Specifies a database index.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_USERDEFINEDTYPE">
      <summary>Specifies a user-defined type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_VIEWTRIGGER">
      <summary>Specifies a database view trigger.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_VIEWINDEX">
      <summary>Specifies a database view index.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_HASFIRSTCHILD">
      <summary>Specifies that the DSRef object has a first child.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_HASNEXTSIBLING">
      <summary>Specifies that the DSRef object has a sibling that can be accessed next.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_HASNAME">
      <summary>Specifies that the DSRef object has a name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_HASMONIKER">
      <summary>Specifies that the DSRef object has a moniker.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_HASOWNER">
      <summary>Specifies that the DSRef object has an owner.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_HASPROP">
      <summary>Specifies that the DSRef object has properties.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE.DSREFTYPE_NODE">
      <summary>Specifies a generic node.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.DSRefConstants">
      <summary>Holds DSRef constants that are used by <see cref="T:Microsoft.VisualStudio.Data.Framework.DSRefClipboardObject" /> and <see cref="T:Microsoft.VisualStudio.Data.Framework.DSRefBuilder" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.DSRefConstants.ClipboardFormat">
      <summary>Specifies the Clipboard format.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.DSRefConstants.DSREFNODEID_NIL">
      <summary>Holds a <see cref="T:System.IntPtr" /> value specifying a node ID NIL value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.DSRefConstants.DSREFNODEID_ROOT">
      <summary>Holds a <see cref="T:System.IntPtr" /> value specifying a node ID ROOT value.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer">
      <summary>Reads DSRef trees.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetExtendedType(System.IntPtr)">
      <summary>Retrieves the GUID for the extended type of a specified node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the node whose extended type is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetFirstChildNode(System.IntPtr)">
      <summary>Retrieves the identifier of the first child node in the parent's vector of children for a specified parent node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the parent node for which the first child node is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetMoniker(System.IntPtr)">
      <summary>Retrieves the moniker of the specified node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the node whose moniker is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetName(System.IntPtr)">
      <summary>Retrieves the name of the database object to which the database refers.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the node whose database object name is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetNextSiblingNode(System.IntPtr)">
      <summary>Retrieves the identifier of the next sibling node of a specified node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the child node of which the sibling node is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetOwner(System.IntPtr)">
      <summary>Retrieves the schema of the database object to which the database refers.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the node whose owner schema is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetProperty(System.IntPtr,System.Guid@)">
      <summary>Retrieves the GUID and Variant property associated with the specified node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the node whose property is to be retrieved.</param>
      <param name="guidProp">The REFGUID of the property to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetTimestamp">
      <summary>Returns the time that the DSRef is persisted.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetType(System.IntPtr)">
      <summary>Retrieves the type of a specified node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the node whose type is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefConsumer.GetVersion">
      <summary>Returns the version of the DSRef tree.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider">
      <summary>Creates DSRef trees.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.Clear">
      <summary>Resets a specified tree to an empty state.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.CreateFirstChildNode(System.IntPtr)">
      <summary>Adds an initial child node to a parent node. </summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code.</returns>
      <param name="drnidCurr">The DSREFNODEID of the parent node for which the first child node is to be created.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.CreateNextSiblingNode(System.IntPtr)">
      <summary>Adds another sibling node to a child node.</summary>
      <returns>NOERROR if successful; otherwise, an unspecified failure code. </returns>
      <param name="drnidCurr">The DSREFNODEID of the child node to which the sibling node is to be added.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.SetExtendedType(System.IntPtr,System.Guid@)">
      <summary>Sets the extended type for a specified node.</summary>
      <param name="drnidCurr">The DSREFNODEID of the node whose extended property is to be set.</param>
      <param name="pguidType">A reference to the GUID of the extended type to be set for the specified node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.SetMoniker(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <summary>Sets the moniker of a specified node.</summary>
      <param name="drnidCurr">The DSREFNODEID of the node whose moniker is to be set.</param>
      <param name="pIMoniker">A reference to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IMoniker" /> interface that contains the moniker to be set for the specified node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.SetName(System.IntPtr,System.String)">
      <summary>Sets the name of a specified node.</summary>
      <param name="drnidCurr">The DSREFNODEID of the node whose name is to be set.</param>
      <param name="bstrName">A BSTR that contains the name to be set for the specified node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.SetOwner(System.IntPtr,System.String)">
      <summary>Sets the schema name for a specified node.</summary>
      <param name="drnidCurr">The DSREFNODEID of the node whose owner name is to be set.</param>
      <param name="bstrOwnerName">A BSTR that contains the owner name to be set for the specified node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.SetProperty(System.IntPtr,System.Guid@,System.Object)">
      <summary>Sets the GUID and value of the catalog or database property for a specified node.</summary>
      <param name="drnidCurr">The DSREFNODEID of the node whose property is to be set.</param>
      <param name="guidProp">The REFGUID of the property to be set for the specified node.</param>
      <param name="varPropValue">A VARIANT value of the property to be set for the specified node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.IDSRefProvider.SetType(System.IntPtr,Microsoft.VisualStudio.Data.Services.SupportEntities.Interop.__DSREFTYPE)">
      <summary>Sets the type of a node to specify the type of database object that the node references.</summary>
      <param name="drnidCurr">The DSREFNODEID of the node whose type is to be set.</param>
      <param name="grfType">A DSREFTYPE enumeration that contains the value of the type to be set for the specified node.</param>
    </member>
  </members>
</doc>