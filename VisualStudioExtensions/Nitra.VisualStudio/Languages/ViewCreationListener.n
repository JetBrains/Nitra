using Nitra;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.Linq;
using System.Text;
using System.Windows.Media;

using NLog;

using Microsoft.VisualStudio.Utilities;
using Microsoft.VisualStudio.Language.StandardClassification;
using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Classification;
using Microsoft.VisualStudio.Text.Editor;

namespace Nitra.VisualStudio
{
  [Export(typeof(IWpfTextViewCreationListener))]
  [ContentType("code")]
  [TextViewRole(PredefinedTextViewRoles.Document)]
  internal sealed class ViewCreationListener : IWpfTextViewCreationListener
  {
                     _logger                            : Logger                             = LogManager.GetLogger(typeof(this).FullName);
    [Import] mutable _globalConfig                      : INitraGlobalConfig                 = null;
    [Import] mutable _formatMapService                  : IClassificationFormatMapService    = null;
    [Import] mutable _classificationTypeRegistryService : IClassificationTypeRegistryService = null;
    [Import] mutable _standardClassifications           : IStandardClassificationService     = null;

    public TextViewCreated(textView : IWpfTextView) : void
    {
      // TODO: WORKAROUND: Надо разобраться как корректно добавлять формат для классификаторов, а этот код удалить.
      when (textView.TextBuffer.Properties.ContainsProperty(TextBufferProperties.Language))
      {
        _logger.Trace("TextViewCreated");
        def formatMap = _formatMapService.GetClassificationFormatMap(textView);
        _globalConfig.ApplySpanClassStyles(formatMap, _classificationTypeRegistryService, _standardClassifications);
      }
    }
  }
}
