using Nitra;

using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Imperative;

using System;
using System.Collections.Generic;
using System.Console;
using System.Linq;

module Program
{
  Main() : void
  {
    def parserHost = ParserHost();
    for (;;)
    {
      Write("input>");
      def input = ReadLine();
      when (string.IsNullOrWhiteSpace(input))
        break;

      def source = SingleLineSourceSnapshot(input);
      def parseResult = Calc.Start(source, parserHost);
      def ast = CalcAst.Start.Create(parseResult);
      WriteLine($"Pretty print: $ast");

      unless (parseResult.IsSuccess)
        foreach(error in parseResult.GetErrors())
        {
          def (line, col) = error.Location.StartLineColumn;
          WriteLine($<#$line:$col: $(error.Message)#>);
        }

      def result = ast.Value();
      WriteLine($"Result: $result");
    }
  }
}
