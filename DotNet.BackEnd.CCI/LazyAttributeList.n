using DotNet;

using Microsoft.Cci;

using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra.BackEnd.Cci;
using Nitra.Declarations;

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;

namespace Nitra.BackEnd.Cci
{
  [Record]
  public sealed class LazyAttributeList : LazyList[CustomAttributeSymbol]
  {
    _cciAttributeHost : IReference;
    _cciBackEnd       : CciBackEnd;
    
    protected override OnLoad() : void
    {
      def count = _cciAttributeHost.Attributes.Count();
      def builder = ImmutableArray.CreateBuilder.[CustomAttributeSymbol](count);
      def context = DependentPropertyEvalContext();


      foreach (attr in _cciAttributeHost.Attributes)
        builder.Add(_cciBackEnd.LoadCustomAttribute(attr, context));

      _list = builder.MoveToImmutable();
    }
  }
}
