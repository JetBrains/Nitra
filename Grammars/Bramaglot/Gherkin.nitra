using System.Linq;

using B = DescribeBehaviour; // namespace which contains Feature & Scenario classes

syntax module Gherkin
{
  using Whitespaces;
  using StandardSpanClasses;
  using PrettyPrint;

  keyword regex ['A'..'Z', 'a'..'z']+ rule S;
  span class Keyword = ['A'..'Z', 'a'..'z']+;  // need to automatic highliting of contextual keywords

  token Content = sm Str=(!NewLineCharacter Any)* // parse everything till end of line (and including) 
  {
    Value() : string = GetText(Str);
  }

  [StartRule]
  syntax Feature = "Feature" ":" Content inl AsA IWantTo SoThat Scenario* d nl // Use "+" instead "*" if you need one or more entry
  {
    syntax AsA     = "As" sm "a"            Content nl { Value() : string = Content.Value(); }
    syntax IWantTo = "I"  sm "want" sm "to" Content nl { Value() : string = Content.Value(); }
    syntax SoThat  = "So" sm "that"         Content nl { Value() : string = Content.Value(); }
  
    Value() : B.Feature = B.Feature(Content.Value(), AsA.Value(), IWantTo.Value(), SoThat.Value(), Scenarios.Select(s => s.Value()));
  }

  syntax Scenario = nl "Scenario" ":" Content inl Given When Then d
  {
    syntax Given = "Given" Content nl { Value() : string = Content.Value(); }
    syntax When  = "When"  Content nl { Value() : string = Content.Value(); }
    syntax Then  = "Then"  Content nl { Value() : string = Content.Value(); }

    Value() : B.Scenario = B.Scenario(Content.Value(), Given.Value(), When.Value(), Then.Value());
  }
}
