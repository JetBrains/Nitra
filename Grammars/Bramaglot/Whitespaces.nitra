syntax module Whitespaces
{
  using Identifiers;

  token Any = ['\u0000'..'\uFFFF'];

  token UnicodeLineSeparator = '\u2028';
  token UnicodeParagraphSeparator = '\u2029';
  token NewLineCharacter = '\n' | '\r' | UnicodeLineSeparator | UnicodeParagraphSeparator;
  token NewLine = "\r\n" | NewLineCharacter;

  token Whitespace = [Zs] | '\t' | '\v' | '\f' | '\uFEFF';
  token Space = Whitespace | NewLineCharacter;
  token Spaces = Space+;

  [ExplicitSpaces] syntax IgnoreToken
  {
    | SpaceToken = Spaces;
  }

  [ExplicitSpaces] void s = IgnoreToken*;                // optional spacer
  [ExplicitSpaces] void S   = !IdentifierPartCharacters s; // identifier break spacer
}
