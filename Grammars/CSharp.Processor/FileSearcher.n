using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

public module FileSearcher
{
  public Search([NotNull] fileMasks : IEnumerable[string], searchOption : SearchOption) : array[string]
  {
    def filePaths = List();
    foreach (fileMask in fileMasks)
    {
      def maskFileDir =
        match (Path.GetDirectoryName(fileMask))
        {
          | "" => Environment.CurrentDirectory
          | x => x
        }
      def maskFileName = Path.GetFileName(fileMask);
      def fileNames =
        if(fileMask.IndexOfAny(array['*', '?']) >= 0)
          Directory.GetFiles(maskFileDir, maskFileName, searchOption)
        else
          Directory.GetFiles(maskFileDir, maskFileName);
      filePaths.AddRange(fileNames);
    }
    filePaths.ToArray()
  }
}
